{"version":3,"file":"static/js/477.2e524671.chunk.js","mappings":"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","sources":["service/config/config.ts","service/request/request.ts","service/index.ts","service/api.ts","views/detail/style.ts","views/detail/index.tsx"],"sourcesContent":["export const BASE_URL = 'https://www.yidongmall.cn';\r\n\r\nexport const TIME_OUT = 10000;\r\n","import axios, { AxiosResponse, InternalAxiosRequestConfig } from 'axios';\nimport type { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport type { eAxiosResponse } from './type';\nimport { refleshToken } from '../api';\nimport { TokenFunc } from '@/type';\n\n// 是否正在刷新的标记\nlet isRefreshing = false;\n// 重试队列，每一项将是一个待执行的函数形式\nlet requests: TokenFunc[] = [];\n\nclass Request {\n  // axios 实例\n  instance: AxiosInstance;\n\n  constructor(config: AxiosRequestConfig) {\n    this.instance = axios.create(config);\n    this.instance.interceptors.request.use(\n      (config: InternalAxiosRequestConfig) => {\n        if (localStorage.getItem('token') !== null) {\n          const token = localStorage.getItem('token') as string;\n          config.headers['token'] = `${token}`;\n        } else {\n          console.log('删除 token 了');\n          delete config.headers['Authorization'];\n        }\n        return config;\n      },\n      (err: AxiosResponse) => {\n        return err;\n      }\n    );\n\n    this.instance.interceptors.response.use(\n      (response) => {\n        // 获取code值\n        const { code, message } = response.data;\n        // 执行无痛刷新token\n        if (code === 500 && message === 'token无效!请重新登录!') {\n          const config = response.config;\n          if (!isRefreshing) {\n            isRefreshing = true;\n            return refleshToken()\n              .then((res) => {\n                const { data: token } = res;\n                // 设置token\n                localStorage.setItem('token', token);\n                console.log('token设置完毕');\n                config.headers['token'] = token;\n\n                // 已经刷新了token,将队列里的请求进行重试\n                requests.forEach((item) => item(token));\n                // 将重试队列置空\n                requests = [];\n                return this.instance.request(config);\n              })\n              .catch((res) => {\n                // 如果刷新token无效则直接回到登录页面\n                console.log('reflashtoken error = >', res);\n                window.location.href = '/Login';\n              })\n              .finally(() => {\n                isRefreshing = false;\n              });\n          } else {\n            // 此时代表正在刷新token,返回一个未执行resolve的promise\n            return new Promise((resolve) => {\n              requests.push((token) => {\n                config.headers['token'] = token;\n                // 发送请求\n                resolve(this.instance.request(config));\n              });\n            });\n          }\n        }\n        return response.data;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n  }\n\n  request<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.instance.request<any, T>(config);\n  }\n  get<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'GET' });\n  }\n  post<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'POST' });\n  }\n  delete<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'DELETE' });\n  }\n}\n\nexport default Request;\n","import { BASE_URL, TIME_OUT } from './config/config';\r\nimport Request from './request/request';\r\n\r\nconst request = new Request({\r\n  baseURL: BASE_URL,\r\n  timeout: TIME_OUT\r\n});\r\n\r\nexport default request;\r\n","import { interviewTime, LoginProps, searchUserType } from '@/type';\r\nimport request from '.';\r\n\r\nexport function login(props: LoginProps) {\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: props\r\n  });\r\n}\r\n\r\n// 获取报名情况\r\nexport function getEnrollData(direction: string) {\r\n  return request.get({\r\n    url: `/api/admin/orderBy/${direction}`\r\n  });\r\n}\r\n\r\nexport function getSearchData(params: searchUserType) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoByName?username=${params.username}`\r\n  });\r\n}\r\n\r\n// 获取面试时间\r\nexport function getInterviewTime() {\r\n  return request.get({\r\n    url: '/api/admin/getAllTime'\r\n  });\r\n}\r\n\r\nexport async function refreshToken() {\r\n  const username = window.localStorage.getItem('username') as string;\r\n  const password = window.localStorage.getItem('password') as string;\r\n\r\n  return login({ username, password }).then((res) => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\n// 更改面试基本信息\r\nexport function updateInterviewInfo(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/updateTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 新增面试时间\r\nexport function addNewInterview(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/addTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 删除面试时间\r\nexport function deleteInterviewTime(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/deleteTime/${id}`\r\n  });\r\n}\r\n\r\n// 获取某个用户的基本信息\r\nexport function getUserInfoById(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoById`,\r\n    params: { id }\r\n  });\r\n}\r\n\r\nexport function refleshToken() {\r\n  const username = localStorage.getItem('username');\r\n  const password = localStorage.getItem('password');\r\n\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: {\r\n      username,\r\n      password\r\n    }\r\n  });\r\n}\r\n\r\n// 查询当前面试时间是否有被预约`\r\nexport function getAppointSec(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/ifSec/${id}`\r\n  });\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const DetailWrapper = styled.div`\r\n  width: 1200px;\r\n  min-height: 100vh;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  /* background-color: #fff; */\r\n  display: flex;\r\n  .basic-info {\r\n    width: 35%;\r\n    padding: 20px 30px;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 8px 1px #eeeeee;\r\n    border-radius: 10px;\r\n  }\r\n  .edit-info {\r\n    flex: 1;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    /* height: 100vh; */\r\n    margin-left: 20px;\r\n    border-radius: 10px;\r\n    .status {\r\n      margin-bottom: 15px;\r\n    }\r\n    .step-area {\r\n      /* height: 10vh; */\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport { DetailWrapper } from './style';\nimport {\n  Descriptions,\n  Radio,\n  Card,\n  Form,\n  Input,\n  Button,\n  Steps,\n  message,\n  FloatButton,\n  Modal\n} from 'antd';\nimport { getUserInfoById } from '@/service/api';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n  ArrowLeftOutlined,\n  UserOutlined,\n  UsergroupDeleteOutlined,\n  FundOutlined,\n  ExclamationCircleFilled\n} from '@ant-design/icons';\nimport { MenuType, userEnrollType } from '@/type';\n\ninterface DetailProps {\n  children?: ReactNode;\n}\nconst steps = [\n  {\n    title: '报名成功'\n  },\n  {\n    title: '等待面试'\n  },\n  {\n    title: '排队中'\n  },\n  {\n    title: '面试中'\n  },\n  {\n    title: '面试结束'\n  }\n];\n\nconst Detail: FC<DetailProps> = () => {\n  const [basicInfo, setBasicInfo] = useState<userEnrollType | null>(null);\n  const params = useParams();\n  const [current, setCurrent] = useState(0);\n  const naviagate = useNavigate();\n  const { confirm } = Modal;\n  useEffect(() => {\n    getUserInfoById(Number(params.id)).then((res) => {\n      console.log(res.data);\n\n      setBasicInfo(res.data);\n    });\n  }, []);\n\n  const navigateTo = ({ type }: MenuType) => {\n    naviagate(`/home/${type}/1`);\n  };\n\n  const showConfirm = () => {\n    confirm({\n      title: '你确定要切换状态吗？',\n      content: '请确保该状态已经结束',\n      icon: <ExclamationCircleFilled />,\n      onOk() {\n        setCurrent(current + 1);\n      },\n      onCancel() {\n        console.log('Cancel');\n      }\n    });\n  };\n  return (\n    <DetailWrapper>\n      <div className=\"basic-info\">\n        <Descriptions\n          title=\"基本信息\"\n          layout=\"vertical\"\n          bordered={true}\n          column={2}\n        >\n          <Descriptions.Item label=\"姓名\" span={2}>\n            {basicInfo?.username}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"电话\" span={2}>\n            {basicInfo?.phone}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"性别\">\n            <Radio.Group value={basicInfo?.sex === '男' ? 1 : 2}>\n              <Radio value={1}>男</Radio>\n              <Radio value={2}>女</Radio>\n            </Radio.Group>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"学院\">\n            {basicInfo?.college}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"专业\">{basicInfo?.major}</Descriptions.Item>\n          <Descriptions.Item label=\"方向\">\n            <Radio.Group value={basicInfo?.direction === '前端' ? 1 : 2}>\n              <Radio value={1}>前端</Radio>\n              <Radio value={2}>后端</Radio>\n            </Radio.Group>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"自我介绍\">\n            {basicInfo?.introduction}\n          </Descriptions.Item>\n        </Descriptions>\n      </div>\n      <div className=\"edit-info\">\n        <div className=\"card-item status\">\n          <Card title=\"当前状态\">\n            <Steps\n              current={current}\n              items={steps.map((item) => ({\n                key: item.title,\n                title: item.title\n              }))}\n              className=\"step-area\"\n            />\n            <div style={{ marginTop: 24 }}>\n              {current < steps.length - 1 && (\n                <Button type=\"primary\" onClick={() => showConfirm()}>\n                  下一个状态\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button\n                  type=\"primary\"\n                  onClick={() => message.success('Processing complete!')}\n                >\n                  结束\n                </Button>\n              )}\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"card-item assess\">\n          <Card title=\"面评\">\n            <Form name=\"assess\" className=\"assess-area\">\n              <Form.Item\n                name=\"intro\"\n                rules={[{ required: true, message: '请至少写一个字' }]}\n              >\n                <Input.TextArea\n                  showCount\n                  maxLength={400}\n                  style={{ height: '40vh' }}\n                  placeholder=\"这位同学基础怎么说\"\n                />\n              </Form.Item>\n\n              <Form.Item style={{ textAlign: 'right' }}>\n                <Button htmlType=\"submit\">提交</Button>\n              </Form.Item>\n            </Form>\n          </Card>\n        </div>\n\n        <FloatButton.Group\n          trigger=\"click\"\n          type=\"primary\"\n          style={{ right: 24 }}\n          icon={<ArrowLeftOutlined />}\n        >\n          <FloatButton\n            icon={<UsergroupDeleteOutlined />}\n            tooltip={'回到面试情况'}\n            onClick={() => {\n              navigateTo({ type: 'interview' });\n            }}\n          />\n          <FloatButton\n            icon={<UserOutlined />}\n            tooltip={'回到报名情况'}\n            onClick={() => {\n              navigateTo({ type: 'enroll' });\n            }}\n          />\n\n          <FloatButton\n            icon={<FundOutlined />}\n            tooltip={'回到修改面试'}\n            onClick={() => {\n              navigateTo({ type: 'edit' });\n            }}\n          />\n        </FloatButton.Group>\n      </div>\n    </DetailWrapper>\n  );\n};\n\nexport default Detail;\n"],"names":["isRefreshing","requests","Request","config","_this","_classCallCheck","instance","this","axios","interceptors","request","use","localStorage","getItem","token","headers","concat","console","log","err","response","_response$data","data","code","message","Promise","resolve","push","refleshToken","then","res","setItem","forEach","item","catch","window","location","href","finally","reject","_createClass","key","value","_objectSpread","method","baseURL","timeout","login","props","url","params","getEnrollData","direction","getSearchData","username","getInterviewTime","updateInterviewInfo","addNewInterview","deleteInterviewTime","id","getUserInfoById","password","getAppointSec","DetailWrapper","styled","_templateObject","_taggedTemplateLiteral","steps","title","_useState","useState","_useState2","_slicedToArray","basicInfo","setBasicInfo","useParams","_useState3","_useState4","current","setCurrent","naviagate","useNavigate","confirm","Modal","useEffect","Number","navigateTo","_ref","type","_jsxs","children","_jsx","className","Descriptions","layout","bordered","column","label","span","phone","Radio","sex","college","major","introduction","Card","Steps","items","map","style","marginTop","length","Button","onClick","content","icon","ExclamationCircleFilled","onOk","onCancel","Form","name","rules","required","Input","showCount","maxLength","height","placeholder","textAlign","htmlType","FloatButton","trigger","right","ArrowLeftOutlined","UsergroupDeleteOutlined","tooltip","UserOutlined","FundOutlined"],"sourceRoot":""}