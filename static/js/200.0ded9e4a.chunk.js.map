{"version":3,"file":"static/js/200.0ded9e4a.chunk.js","mappings":"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","sources":["components/home-table/index.tsx","components/layout-interview/style.ts","components/layout-interview/index.tsx","hooks/useThrottle.ts","service/config/config.ts","service/request/request.ts","service/index.ts","service/api.ts","utils/index.ts"],"sourcesContent":["import React, { memo, useCallback } from 'react';\r\nimport type { FC, ReactNode } from 'react';\r\nimport { userEnrollType } from '@/type';\r\nimport { Table, Button } from 'antd';\r\nimport { ColumnsType } from 'antd/es/table';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  children?: ReactNode;\r\n  infoData: userEnrollType[];\r\n  showHeader?: boolean;\r\n  loading?: boolean;\r\n}\r\n\r\nconst HomeTable: FC<IProps> = (props) => {\r\n  const navigate = useNavigate();\r\n  const showHeader = props.showHeader ?? true;\r\n  // 进入用户详情页\r\n  const toUserDetail = useCallback((record: userEnrollType) => {\r\n    navigate(`/detail/${record.id}`);\r\n  }, []);\r\n  const columns: ColumnsType<userEnrollType> = [\r\n    {\r\n      title: '名字',\r\n      dataIndex: 'username',\r\n      key: 'username',\r\n      filterMode: 'tree'\r\n    },\r\n    {\r\n      title: '性别',\r\n      key: 'sex',\r\n      dataIndex: 'sex'\r\n    },\r\n    {\r\n      title: '学号',\r\n      key: 'studentId',\r\n      dataIndex: 'studentId'\r\n    },\r\n    {\r\n      title: '手机号码',\r\n      key: 'phone',\r\n      dataIndex: 'phone'\r\n    },\r\n    {\r\n      title: '学院',\r\n      key: 'college',\r\n      dataIndex: 'college'\r\n    },\r\n    {\r\n      title: '专业',\r\n      key: 'major',\r\n      dataIndex: 'major'\r\n    },\r\n    {\r\n      title: '状态',\r\n      key: 'status',\r\n      dataIndex: 'status'\r\n    },\r\n    {\r\n      title: '进入详情',\r\n      key: 'index',\r\n      render: (record: userEnrollType) => {\r\n        return (\r\n          <Button onClick={() => toUserDetail(record)} type=\"primary\">\r\n            进入详情\r\n          </Button>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n  return (\r\n    <>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={props.infoData}\r\n        rowKey=\"id\"\r\n        showHeader={showHeader}\r\n        loading={props?.loading}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(HomeTable);\r\n","import styled from 'styled-components';\r\n\r\nexport const InterviewWrapper = styled.div`\r\n  .btnbox::after {\r\n    display: table;\r\n    clear: both;\r\n    content: '';\r\n  }\r\n  .select-time {\r\n    margin-bottom: 20px;\r\n    font-weight: 700;\r\n  }\r\n  .next-btn {\r\n    margin: 10px 10px 10px 0;\r\n    width: 100px;\r\n    float: right;\r\n  }\r\n  .header {\r\n    width: 100%;\r\n    height: 50px;\r\n    line-height: 50px;\r\n    background-color: #968f8f;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n    margin: 10px 0;\r\n    user-select: none;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n","import React, { memo, useEffect, useState, useRef } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport { interviewTime, userEnrollType } from '@/type';\nimport { InterviewWrapper } from './style';\nimport { useParams } from 'react-router-dom';\nimport {\n  getInterviewTimeDirec,\n  getIsInterviewByid,\n  getRecruitTimeInfo,\n  nextInterview\n} from '@/service/api';\nimport { Button, message, Select } from 'antd';\nimport HomeTable from '../home-table';\nimport { useThrottle } from '@/hooks/useThrottle';\nimport { formatDate } from '@/utils';\n// import { ColumnsType } from 'antd/es/table';\n\ninterface LayoutInterProps {\n  children?: ReactNode;\n}\ninterface item {\n  id: number;\n  date: string;\n}\n\nconst LayoutInter: FC<LayoutInterProps> = () => {\n  const params = useParams();\n  const isInterviewId = useRef<undefined | number>(undefined);\n\n  const [dateList, setDateList] = useState<item[]>([]);\n  const [currId, setCurrId] = useState<number | undefined>(undefined);\n  const [queueList, setQueueList] = useState<userEnrollType[]>([]);\n  // 正在面试的队列\n  const [isInterview, setIsInterview] = useState<userEnrollType[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      let innerCurrId: any = undefined;\n      let innerTimeList: item[] = [];\n\n      // 将获取过来的面试时间转化为 select组件需要的格式\n      await getInterviewTimeDirec(Number(params.direction)).then((res) => {\n        const listData = res.data as interviewTime[];\n        innerTimeList = listData.map((item) => {\n          const date = item.startTime;\n          if (date.split(' ')[0] === formatDate(new Date()))\n            innerCurrId = item.id;\n\n          return { id: item.id as number, date: date };\n        });\n      });\n      innerCurrId === undefined &&\n        message.warning('今天暂无面试,请选择其他日期');\n\n      // 加载数据\n      handleChange(innerCurrId);\n\n      setDateList(innerTimeList);\n      setLoading(false);\n    }\n    fetchData();\n  }, [params]);\n\n  const handleChange = (value: number) => {\n    setCurrId(value);\n    setLoading(true);\n\n    getRecruitTimeInfo(value).then(({ code, data }) => {\n      code === 200 ? setQueueList(data.info) : setQueueList([]);\n      setLoading(false);\n    });\n    // 获取正在面试的队列\n    getIsInterviewByid(value).then((res) => {\n      console.log(res);\n\n      res.code === 200 ? setIsInterview([res.data]) : setIsInterview([]);\n    });\n  };\n\n  const nextOne = useThrottle(() => {\n    console.log('下一位');\n    nextInterview(currId as number, isInterviewId.current).then((res) => {\n      console.log(res);\n    });\n  }, 2000);\n  return (\n    <InterviewWrapper>\n      <div className=\"select-time\">\n        <span>选择日期：</span>\n        <Select\n          value={currId}\n          defaultActiveFirstOption\n          style={{ width: 240 }}\n          onChange={handleChange}\n          fieldNames={{\n            label: 'date',\n            value: 'id'\n          }}\n          options={dateList}\n        />\n      </div>\n      <div className=\"header\">正在面试 Interviewing</div>\n      <HomeTable infoData={isInterview} showHeader={false} loading={loading} />\n      <div className=\"btnbox\">\n        <Button\n          size=\"large\"\n          className=\"next-btn\"\n          type=\"dashed\"\n          onClick={nextOne}\n        >\n          下一位\n        </Button>\n      </div>\n\n      <div className=\"header\">待面试队列 Waiting</div>\n      <HomeTable infoData={queueList} showHeader={false} loading={loading} />\n    </InterviewWrapper>\n  );\n};\n\nexport default memo(LayoutInter);\n","import { useCallback, useEffect, useRef } from 'react';\r\n\r\ntype fnType = (...args: any) => any;\r\n\r\nexport function useThrottle(fn: fnType, delay: number, dep: any[] = []) {\r\n  const { current } = useRef<{ fn: fnType; timer?: NodeJS.Timeout | null }>({\r\n    fn,\r\n    timer: null\r\n  });\r\n  useEffect(\r\n    function () {\r\n      current.fn = fn;\r\n    },\r\n    [fn]\r\n  );\r\n\r\n  return useCallback(function f(this: any, ...args: any) {\r\n    if (!current.timer) {\r\n      current.timer = setTimeout(() => {\r\n        delete current.timer;\r\n      }, delay);\r\n      current.fn.call(this, ...args);\r\n    }\r\n  }, dep);\r\n}\r\n","export const BASE_URL = 'https://www.yidongmall.cn';\r\n\r\nexport const TIME_OUT = 10000;\r\n","import axios, { AxiosResponse, InternalAxiosRequestConfig } from 'axios';\nimport type { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport type { eAxiosResponse } from './type';\nimport { refleshToken } from '../api';\nimport { TokenFunc } from '@/type';\n\n// 是否正在刷新的标记\nlet isRefreshing = false;\n// 重试队列，每一项将是一个待执行的函数形式\nlet requests: TokenFunc[] = [];\n\nclass Request {\n  // axios 实例\n  instance: AxiosInstance;\n\n  constructor(config: AxiosRequestConfig) {\n    this.instance = axios.create(config);\n    this.instance.interceptors.request.use(\n      (config: InternalAxiosRequestConfig) => {\n        if (localStorage.getItem('token') !== null) {\n          const token = localStorage.getItem('token') as string;\n          config.headers['token'] = `${token}`;\n        } else {\n          console.log('删除 token 了');\n          delete config.headers['Authorization'];\n        }\n        return config;\n      },\n      (err: AxiosResponse) => {\n        return err;\n      }\n    );\n\n    this.instance.interceptors.response.use(\n      (response) => {\n        // 获取code值\n        const { code, message } = response.data;\n        // 执行无痛刷新token\n        if (code === 500 && message === 'token无效!请重新登录!') {\n          const config = response.config;\n          if (!isRefreshing) {\n            isRefreshing = true;\n            return refleshToken()\n              .then((res) => {\n                const { data: token } = res;\n                // 设置token\n                localStorage.setItem('token', token);\n                console.log('token设置完毕');\n                config.headers['token'] = token;\n\n                // 已经刷新了token,将队列里的请求进行重试\n                requests.forEach((item) => item(token));\n                // 将重试队列置空\n                requests = [];\n                return this.instance.request(config);\n              })\n              .catch((res) => {\n                // 如果刷新token无效则直接回到登录页面\n                console.log('reflashtoken error = >', res);\n                window.location.href = '/Login';\n              })\n              .finally(() => {\n                isRefreshing = false;\n              });\n          } else {\n            // 此时代表正在刷新token,返回一个未执行resolve的promise\n            return new Promise((resolve) => {\n              requests.push((token) => {\n                config.headers['token'] = token;\n                // 发送请求\n                resolve(this.instance.request(config));\n              });\n            });\n          }\n        }\n        return response.data;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n  }\n\n  request<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.instance.request<any, T>(config);\n  }\n  get<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'GET' });\n  }\n  post<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'POST' });\n  }\n  delete<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'DELETE' });\n  }\n}\n\nexport default Request;\n","import { BASE_URL, TIME_OUT } from './config/config';\r\nimport Request from './request/request';\r\n\r\nconst request = new Request({\r\n  baseURL: BASE_URL,\r\n  timeout: TIME_OUT\r\n});\r\n\r\nexport default request;\r\n","import { interviewTime, LoginProps, searchUserType } from '@/type';\r\nimport request from '.';\r\n\r\nexport function login(props: LoginProps) {\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: props\r\n  });\r\n}\r\n\r\n// 获取报名情况\r\nexport function getEnrollData(direction: string) {\r\n  return request.get({\r\n    url: `/api/admin/orderBy/${direction}`\r\n  });\r\n}\r\n\r\nexport function getSearchData(params: searchUserType) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoByName?username=${params.username}`\r\n  });\r\n}\r\n\r\n// 获取面试时间\r\nexport function getInterviewTime() {\r\n  return request.get({\r\n    url: '/api/admin/getAllTime'\r\n  });\r\n}\r\n// 根据方向获取面试时间\r\nexport function getInterviewTimeDirec(direction: number) {\r\n  return request.get({\r\n    url: `/api/admin/getAllTimeByDir/${direction}`\r\n  });\r\n}\r\n\r\nexport async function refreshToken() {\r\n  const username = window.localStorage.getItem('username') as string;\r\n  const password = window.localStorage.getItem('password') as string;\r\n\r\n  return login({ username, password }).then((res) => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\n// 更改面试基本信息\r\nexport function updateInterviewInfo(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/updateTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 新增面试时间\r\nexport function addNewInterview(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/addTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 删除面试时间\r\nexport function deleteInterviewTime(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/deleteTime/${id}`\r\n  });\r\n}\r\n\r\n// 获取某个用户的基本信息\r\nexport function getUserInfoById(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoById`,\r\n    params: { id }\r\n  });\r\n}\r\n\r\nexport function refleshToken() {\r\n  const username = localStorage.getItem('username');\r\n  const password = localStorage.getItem('password');\r\n\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: {\r\n      username,\r\n      password\r\n    }\r\n  });\r\n}\r\n\r\n// 查询当前面试时间是否有被预约`\r\nexport function getAppointSec(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/ifSec/${id}`\r\n  });\r\n}\r\n\r\n// 查询多少分钟之前能预约\r\nexport function getPreRecruitTime() {\r\n  return request.get({\r\n    url: `/api/admin/getPreRecruitTime`\r\n  });\r\n}\r\n\r\n// 更改多少分钟之前能预约\r\nexport function editPreRecruitTime(time: number) {\r\n  return request.get({\r\n    url: `/api/admin/changeRecruitTime/${time}`\r\n  });\r\n}\r\n\r\n// 获取该面试时间的信息\r\nexport function getRecruitTimeInfo(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getThisTimeDelInfo/${id}`\r\n  });\r\n}\r\n// 获取当天面试时间\r\nexport function getTodayInfo(direction: number) {\r\n  return request.get({\r\n    url: `/api/admin/getThisDayTime/${direction}`\r\n  });\r\n}\r\n\r\n// 填写用户的评价\r\nexport function setUserAssess(id: number, assess: string) {\r\n  return request.get({\r\n    url: `/api/admin/setAssess/${id}`,\r\n    params: {\r\n      assess\r\n    }\r\n  });\r\n}\r\n/**\r\n *  获取当前面试时间的面试情况\r\n * @param id 面试时间id\r\n */\r\n\r\nexport function getIsInterviewByid(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getNow/${id}`\r\n  });\r\n}\r\n\r\n/**\r\n * 下一位面试者\r\n * @param id 面试时间\r\n * @param uid 上一位用户id\r\n */\r\n\r\nexport function nextInterview(id: number, uid?: number) {\r\n  return uid === undefined\r\n    ? request.get({\r\n        url: `/api/admin/getNext/${id}/0`\r\n      })\r\n    : request.get({\r\n        url: `/api/admin/getNext/${id}/${uid}`\r\n      });\r\n}\r\n","import { MenuItemType } from '@/type';\r\nimport React from 'react';\r\n\r\n// 截取字符串，并将其转为数字\r\nexport function substrNum(str: string): number {\r\n  return Number(str.slice(-1));\r\n}\r\n\r\n// 封装一下menuItem添加数据的方法\r\nexport function getItem(\r\n  label: React.ReactNode,\r\n  key: React.Key,\r\n  icon?: React.ReactNode,\r\n  children?: MenuItemType[]\r\n): MenuItemType {\r\n  return {\r\n    key,\r\n    icon,\r\n    children,\r\n    label\r\n  } as MenuItemType;\r\n}\r\n\r\n// 将毫秒转化为 YY-MM-DD的格式\r\nexport function formatDate(dateObj: Date) {\r\n  const year = dateObj.getFullYear().toString();\r\n  const month = (dateObj.getMonth() + 1).toString().padStart(2, '0');\r\n  const date = dateObj.getDate().toString().padStart(2, '0');\r\n\r\n  return `${year}-${month}-${date}`;\r\n}\r\n"],"names":["HomeTable","props","_props$showHeader","navigate","useNavigate","showHeader","toUserDetail","useCallback","record","concat","id","columns","title","dataIndex","key","filterMode","render","_jsx","Button","onClick","type","children","_Fragment","Table","dataSource","infoData","rowKey","loading","memo","InterviewWrapper","styled","_templateObject","_taggedTemplateLiteral","LayoutInter","params","useParams","isInterviewId","useRef","undefined","_useState","useState","_useState2","_slicedToArray","dateList","setDateList","_useState3","_useState4","currId","setCurrId","_useState5","_useState6","queueList","setQueueList","_useState7","_useState8","isInterview","setIsInterview","_useState9","_useState10","setLoading","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","innerCurrId","innerTimeList","wrap","_context","prev","next","getInterviewTimeDirec","Number","direction","then","res","listData","data","map","item","date","startTime","split","formatDate","Date","message","handleChange","stop","apply","arguments","fetchData","value","getRecruitTimeInfo","_ref","code","info","getIsInterviewByid","console","log","nextOne","useThrottle","nextInterview","current","_jsxs","className","Select","defaultActiveFirstOption","style","width","onChange","fieldNames","label","options","size","fn","delay","dep","length","timer","_current$fn","setTimeout","_len","args","Array","_key","call","this","isRefreshing","requests","Request","config","_this","_classCallCheck","instance","axios","interceptors","request","use","localStorage","getItem","token","headers","err","response","_response$data","Promise","resolve","push","refleshToken","setItem","forEach","catch","window","location","href","finally","reject","_createClass","_objectSpread","method","baseURL","timeout","login","url","getEnrollData","getSearchData","username","updateInterviewInfo","addNewInterview","deleteInterviewTime","getUserInfoById","password","getAppointSec","getPreRecruitTime","editPreRecruitTime","time","setUserAssess","assess","uid","substrNum","str","slice","icon","dateObj","year","getFullYear","toString","month","getMonth","padStart","getDate"],"sourceRoot":""}