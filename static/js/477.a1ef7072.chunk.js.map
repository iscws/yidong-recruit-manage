{"version":3,"file":"static/js/477.a1ef7072.chunk.js","mappings":"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","sources":["hooks/useThrottle.ts","service/config/config.ts","service/request/request.ts","service/index.ts","service/api.ts","views/detail/style.ts","views/detail/index.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\r\n\r\ntype fnType = (...args: any) => any;\r\n\r\nexport function useThrottle(fn: fnType, delay: number, dep: any[] = []) {\r\n  const { current } = useRef<{ fn: fnType; timer?: NodeJS.Timeout | null }>({\r\n    fn,\r\n    timer: null\r\n  });\r\n  useEffect(\r\n    function () {\r\n      current.fn = fn;\r\n    },\r\n    [fn]\r\n  );\r\n\r\n  return useCallback(function f(this: any, ...args: any) {\r\n    if (!current.timer) {\r\n      current.timer = setTimeout(() => {\r\n        delete current.timer;\r\n      }, delay);\r\n      current.fn.call(this, ...args);\r\n    }\r\n  }, dep);\r\n}\r\n","export const BASE_URL = 'https://www.yidongmall.cn';\r\n\r\nexport const TIME_OUT = 10000;\r\n","import axios, { AxiosResponse, InternalAxiosRequestConfig } from 'axios';\nimport type { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport type { eAxiosResponse } from './type';\nimport { refleshToken } from '../api';\nimport { TokenFunc } from '@/type';\n\n// 是否正在刷新的标记\nlet isRefreshing = false;\n// 重试队列，每一项将是一个待执行的函数形式\nlet requests: TokenFunc[] = [];\n\nclass Request {\n  // axios 实例\n  instance: AxiosInstance;\n\n  constructor(config: AxiosRequestConfig) {\n    this.instance = axios.create(config);\n    this.instance.interceptors.request.use(\n      (config: InternalAxiosRequestConfig) => {\n        if (localStorage.getItem('token') !== null) {\n          const token = localStorage.getItem('token') as string;\n          config.headers['token'] = `${token}`;\n        } else {\n          console.log('删除 token 了');\n          delete config.headers['Authorization'];\n        }\n        return config;\n      },\n      (err: AxiosResponse) => {\n        return err;\n      }\n    );\n\n    this.instance.interceptors.response.use(\n      (response) => {\n        // 获取code值\n        const { code, message } = response.data;\n        // 执行无痛刷新token\n        if (code === 500 && message === 'token无效!请重新登录!') {\n          const config = response.config;\n          if (!isRefreshing) {\n            isRefreshing = true;\n            return refleshToken()\n              .then((res) => {\n                const { data: token } = res;\n                // 设置token\n                localStorage.setItem('token', token);\n                console.log('token设置完毕');\n                config.headers['token'] = token;\n\n                // 已经刷新了token,将队列里的请求进行重试\n                requests.forEach((item) => item(token));\n                // 将重试队列置空\n                requests = [];\n                return this.instance.request(config);\n              })\n              .catch((res) => {\n                // 如果刷新token无效则直接回到登录页面\n                console.log('reflashtoken error = >', res);\n                window.location.href = '/Login';\n              })\n              .finally(() => {\n                isRefreshing = false;\n              });\n          } else {\n            // 此时代表正在刷新token,返回一个未执行resolve的promise\n            return new Promise((resolve) => {\n              requests.push((token) => {\n                config.headers['token'] = token;\n                // 发送请求\n                resolve(this.instance.request(config));\n              });\n            });\n          }\n        }\n        return response.data;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n  }\n\n  request<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.instance.request<any, T>(config);\n  }\n  get<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'GET' });\n  }\n  post<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'POST' });\n  }\n  delete<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'DELETE' });\n  }\n}\n\nexport default Request;\n","import { BASE_URL, TIME_OUT } from './config/config';\r\nimport Request from './request/request';\r\n\r\nconst request = new Request({\r\n  baseURL: BASE_URL,\r\n  timeout: TIME_OUT\r\n});\r\n\r\nexport default request;\r\n","import { interviewTime, LoginProps, searchUserType } from '@/type';\r\nimport request from '.';\r\n\r\nexport function login(props: LoginProps) {\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: props\r\n  });\r\n}\r\n\r\n// 获取报名情况\r\nexport function getEnrollData(direction: string) {\r\n  return request.get({\r\n    url: `/api/admin/orderBy/${direction}`\r\n  });\r\n}\r\n\r\nexport function getSearchData(params: searchUserType) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoByName?username=${params.username}`\r\n  });\r\n}\r\n\r\n// 获取面试时间\r\nexport function getInterviewTime() {\r\n  return request.get({\r\n    url: '/api/admin/getAllTime'\r\n  });\r\n}\r\n// 根据方向获取面试时间\r\nexport function getInterviewTimeDirec(direction: number) {\r\n  return request.get({\r\n    url: `/api/admin/getAllTimeByDir/${direction}`\r\n  });\r\n}\r\n\r\nexport async function refreshToken() {\r\n  const username = window.localStorage.getItem('username') as string;\r\n  const password = window.localStorage.getItem('password') as string;\r\n\r\n  return login({ username, password }).then((res) => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\n// 更改面试基本信息\r\nexport function updateInterviewInfo(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/updateTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 新增面试时间\r\nexport function addNewInterview(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/addTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 删除面试时间\r\nexport function deleteInterviewTime(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/deleteTime/${id}`\r\n  });\r\n}\r\n\r\n// 获取某个用户的基本信息\r\nexport function getUserInfoById(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoById`,\r\n    params: { id }\r\n  });\r\n}\r\n\r\nexport function refleshToken() {\r\n  const username = localStorage.getItem('username');\r\n  const password = localStorage.getItem('password');\r\n\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: {\r\n      username,\r\n      password\r\n    }\r\n  });\r\n}\r\n\r\n// 查询当前面试时间是否有被预约`\r\nexport function getAppointSec(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/ifSec/${id}`\r\n  });\r\n}\r\n\r\n// 查询多少分钟之前能预约\r\nexport function getPreRecruitTime() {\r\n  return request.get({\r\n    url: `/api/admin/getPreRecruitTime`\r\n  });\r\n}\r\n\r\n// 更改多少分钟之前能预约\r\nexport function editPreRecruitTime(time: number) {\r\n  return request.get({\r\n    url: `/api/admin/changeRecruitTime/${time}`\r\n  });\r\n}\r\n\r\n// 获取该面试时间的信息\r\nexport function getRecruitTimeInfo(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getThisTimeDelInfo/${id}`\r\n  });\r\n}\r\n// 获取当天面试时间\r\nexport function getTodayInfo(direction: number) {\r\n  return request.get({\r\n    url: `/api/admin/getThisDayTime/${direction}`\r\n  });\r\n}\r\n\r\n// 填写用户的评价\r\nexport function setUserAssess(id: number, assess: string) {\r\n  return request.get({\r\n    url: `/api/admin/setAssess/${id}`,\r\n    params: {\r\n      assess\r\n    }\r\n  });\r\n}\r\n/**\r\n *  获取当前面试时间的面试情况\r\n * @param id 面试时间id\r\n */\r\n\r\nexport function getIsInterviewByid(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getNow/${id}`\r\n  });\r\n}\r\n\r\n/**\r\n * 下一位面试者\r\n * @param id 面试时间\r\n * @param uid 上一位用户id\r\n */\r\n\r\nexport function nextInterview(id: number, uid?: number) {\r\n  return uid === undefined\r\n    ? request.get({\r\n        url: `/api/admin/getNext/${id}/0`\r\n      })\r\n    : request.get({\r\n        url: `/api/admin/getNext/${id}/${uid}`\r\n      });\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const DetailWrapper = styled.div`\r\n  width: 1200px;\r\n  min-height: 400px;\r\n  max-height: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  /* background-color: #fff; */\r\n  display: flex;\r\n  .basic-info {\r\n    width: 35%;\r\n    padding: 20px 30px;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 8px 1px #eeeeee;\r\n    border-radius: 10px;\r\n  }\r\n  .edit-info {\r\n    flex: 1;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    /* height: 100vh; */\r\n    margin-left: 20px;\r\n    border-radius: 10px;\r\n    .status {\r\n      margin-bottom: 15px;\r\n    }\r\n    .step-area {\r\n      /* height: 10vh; */\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport { DetailWrapper } from './style';\nimport {\n  Descriptions,\n  Radio,\n  Card,\n  Form,\n  Input,\n  Button,\n  Steps,\n  message,\n  FloatButton,\n  Modal\n} from 'antd';\nimport { getUserInfoById, setUserAssess } from '@/service/api';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n  ArrowLeftOutlined,\n  UserOutlined,\n  UsergroupDeleteOutlined,\n  FundOutlined,\n  ExclamationCircleFilled\n} from '@ant-design/icons';\nimport { MenuType, userEnrollType } from '@/type';\nimport { useThrottle } from '@/hooks/useThrottle';\n\ninterface DetailProps {\n  children?: ReactNode;\n}\nconst steps = [\n  {\n    key: 0,\n    title: '报名成功'\n  },\n  {\n    key: 1,\n    title: '等待面试'\n  },\n  {\n    key: 2,\n    title: '排队中'\n  },\n  {\n    key: 3,\n    title: '面试中'\n  },\n  {\n    key: 4,\n    title: '面试结束'\n  }\n];\n\nconst stepsMap = new Map([\n  ['报名成功', 0],\n  ['等待面试', 1],\n  ['排队中', 2],\n  ['面试中', 3],\n  ['面试结束', 4]\n]);\nconst Detail: FC<DetailProps> = () => {\n  const [basicInfo, setBasicInfo] = useState<userEnrollType | null>(null);\n  const params = useParams();\n  const [current, setCurrent] = useState(0);\n  const naviagate = useNavigate();\n  const { confirm } = Modal;\n  useEffect(() => {\n    getUserInfoById(Number(params.id)).then((res) => {\n      setCurrent(stepsMap.get(res.data.status) as number);\n      setBasicInfo(res.data);\n    });\n  }, []);\n\n  const navigateTo = ({ type }: MenuType) => {\n    naviagate(`/home/${type}/1`);\n  };\n  const submitAssess = useThrottle((e) => {\n    if (e.assess !== basicInfo?.assess) {\n      setUserAssess(Number(params.id), e.assess).then((res) => {\n        res.code === 200\n          ? message.success(res.message)\n          : message.error(res.message);\n      });\n    } else {\n      message.warning('没有做任何修改！');\n    }\n  }, 1000);\n  const showConfirm = () => {\n    confirm({\n      title: '你确定要切换状态吗？',\n      content: '请确保该状态已经结束',\n      icon: <ExclamationCircleFilled />,\n      onOk() {\n        setCurrent(current + 1);\n      },\n      onCancel() {\n        console.log('Cancel');\n      }\n    });\n  };\n  return (\n    <DetailWrapper>\n      <div className=\"basic-info\">\n        <Descriptions\n          title=\"基本信息\"\n          layout=\"vertical\"\n          bordered={true}\n          column={2}\n        >\n          <Descriptions.Item label=\"姓名\" span={2}>\n            {basicInfo?.username}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"电话\" span={2}>\n            {basicInfo?.phone}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"性别\">\n            <Radio.Group value={basicInfo?.sex === '男' ? 1 : 2}>\n              <Radio value={1}>男</Radio>\n              <Radio value={2}>女</Radio>\n            </Radio.Group>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"学院\">\n            {basicInfo?.college}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"专业\">{basicInfo?.major}</Descriptions.Item>\n          <Descriptions.Item label=\"方向\">\n            <Radio.Group value={basicInfo?.direction === '前端' ? 1 : 2}>\n              <Radio value={1}>前端</Radio>\n              <Radio value={2}>后端</Radio>\n            </Radio.Group>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"自我介绍\">\n            {basicInfo?.introduction}\n          </Descriptions.Item>\n        </Descriptions>\n      </div>\n      <div className=\"edit-info\">\n        <div className=\"card-item status\">\n          <Card title=\"当前状态\">\n            <Steps\n              current={current}\n              items={steps.map((item) => ({\n                key: item.title,\n                title: item.title\n              }))}\n              className=\"step-area\"\n            />\n            <div style={{ marginTop: 24 }}>\n              {current < steps.length - 1 && (\n                <Button\n                  type=\"primary\"\n                  onClick={() => showConfirm()}\n                  disabled={current <= 1}\n                >\n                  下一个状态\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button\n                  type=\"primary\"\n                  onClick={() => message.success('Processing complete!')}\n                >\n                  结束\n                </Button>\n              )}\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"card-item assess\">\n          <Card title=\"面评\">\n            {basicInfo !== null && (\n              <Form\n                name=\"assess\"\n                className=\"assess-area\"\n                onFinish={submitAssess}\n              >\n                <Form.Item\n                  name=\"assess\"\n                  initialValue={basicInfo?.assess}\n                  rules={[{ required: true, message: '请至少写一个字' }]}\n                >\n                  <Input.TextArea\n                    showCount\n                    maxLength={400}\n                    style={{ height: '40vh' }}\n                    placeholder=\"这位同学基础怎么说\"\n                  />\n                </Form.Item>\n\n                <Form.Item style={{ textAlign: 'right' }}>\n                  <Button htmlType=\"submit\" disabled={current < 3}>\n                    提交\n                  </Button>\n                </Form.Item>\n              </Form>\n            )}\n          </Card>\n        </div>\n\n        <FloatButton.Group\n          trigger=\"click\"\n          type=\"primary\"\n          style={{ right: 24 }}\n          icon={<ArrowLeftOutlined />}\n        >\n          <FloatButton\n            icon={<UsergroupDeleteOutlined />}\n            tooltip={'回到面试情况'}\n            onClick={() => {\n              navigateTo({ type: 'interview' });\n            }}\n          />\n          <FloatButton\n            icon={<UserOutlined />}\n            tooltip={'回到报名情况'}\n            onClick={() => {\n              navigateTo({ type: 'enroll' });\n            }}\n          />\n\n          <FloatButton\n            icon={<FundOutlined />}\n            tooltip={'回到修改面试'}\n            onClick={() => {\n              navigateTo({ type: 'edit' });\n            }}\n          />\n        </FloatButton.Group>\n      </div>\n    </DetailWrapper>\n  );\n};\n\nexport default Detail;\n"],"names":["useThrottle","fn","delay","dep","arguments","length","undefined","current","useRef","timer","useEffect","useCallback","_current$fn","setTimeout","_len","args","Array","_key","call","apply","this","concat","isRefreshing","requests","Request","config","_this","_classCallCheck","instance","axios","interceptors","request","use","localStorage","getItem","token","headers","console","log","err","response","_response$data","data","code","message","Promise","resolve","push","refleshToken","then","res","setItem","forEach","item","catch","window","location","href","finally","reject","_createClass","key","value","_objectSpread","method","baseURL","timeout","login","props","url","params","getEnrollData","direction","getSearchData","username","getInterviewTimeDirec","updateInterviewInfo","addNewInterview","deleteInterviewTime","id","getUserInfoById","password","getAppointSec","getPreRecruitTime","editPreRecruitTime","time","getRecruitTimeInfo","setUserAssess","assess","getIsInterviewByid","nextInterview","uid","DetailWrapper","styled","_templateObject","_taggedTemplateLiteral","steps","title","stepsMap","Map","_useState","useState","_useState2","_slicedToArray","basicInfo","setBasicInfo","useParams","_useState3","_useState4","setCurrent","naviagate","useNavigate","confirm","Modal","Number","get","status","navigateTo","_ref","type","submitAssess","e","_jsxs","children","_jsx","className","Descriptions","layout","bordered","column","label","span","phone","Radio","sex","college","major","introduction","Card","Steps","items","map","style","marginTop","Button","onClick","content","icon","ExclamationCircleFilled","onOk","onCancel","disabled","Form","name","onFinish","initialValue","rules","required","Input","showCount","maxLength","height","placeholder","textAlign","htmlType","FloatButton","trigger","right","ArrowLeftOutlined","UsergroupDeleteOutlined","tooltip","UserOutlined","FundOutlined"],"sourceRoot":""}