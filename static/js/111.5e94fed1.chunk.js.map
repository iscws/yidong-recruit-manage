{"version":3,"file":"static/js/111.5e94fed1.chunk.js","mappings":"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","sources":["service/config/config.ts","service/request/request.ts","service/index.ts","service/api.ts","views/login/style.ts","views/login/index.tsx"],"sourcesContent":["export const BASE_URL = 'https://www.yidongmall.cn';\r\n\r\nexport const TIME_OUT = 10000;\r\n","import axios, { AxiosResponse, InternalAxiosRequestConfig } from 'axios';\nimport type { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport type { eAxiosResponse } from './type';\nimport { refleshToken } from '../api';\nimport { TokenFunc } from '@/type';\n\n// 是否正在刷新的标记\nlet isRefreshing = false;\n// 重试队列，每一项将是一个待执行的函数形式\nlet requests: TokenFunc[] = [];\n\nclass Request {\n  // axios 实例\n  instance: AxiosInstance;\n\n  constructor(config: AxiosRequestConfig) {\n    this.instance = axios.create(config);\n    this.instance.interceptors.request.use(\n      (config: InternalAxiosRequestConfig) => {\n        if (localStorage.getItem('token') !== null) {\n          const token = localStorage.getItem('token') as string;\n          config.headers['token'] = `${token}`;\n        } else {\n          console.log('删除 token 了');\n          delete config.headers['Authorization'];\n        }\n        return config;\n      },\n      (err: AxiosResponse) => {\n        return err;\n      }\n    );\n\n    this.instance.interceptors.response.use(\n      (response) => {\n        // 获取code值\n        const { code, message } = response.data;\n        // 执行无痛刷新token\n        if (code === 500 && message === 'token无效!请重新登录!') {\n          const config = response.config;\n          if (!isRefreshing) {\n            isRefreshing = true;\n            return refleshToken()\n              .then((res) => {\n                const { data: token } = res;\n                // 设置token\n                localStorage.setItem('token', token);\n                console.log('token设置完毕');\n                config.headers['token'] = token;\n\n                // 已经刷新了token,将队列里的请求进行重试\n                requests.forEach((item) => item(token));\n                // 将重试队列置空\n                requests = [];\n                return this.instance.request(config);\n              })\n              .catch((res) => {\n                // 如果刷新token无效则直接回到登录页面\n                console.log('reflashtoken error = >', res);\n                window.location.href = '/Login';\n              })\n              .finally(() => {\n                isRefreshing = false;\n              });\n          } else {\n            // 此时代表正在刷新token,返回一个未执行resolve的promise\n            return new Promise((resolve) => {\n              requests.push((token) => {\n                config.headers['token'] = token;\n                // 发送请求\n                resolve(this.instance.request(config));\n              });\n            });\n          }\n        }\n        return response.data;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n  }\n\n  request<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.instance.request<any, T>(config);\n  }\n  get<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'GET' });\n  }\n  post<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'POST' });\n  }\n  delete<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'DELETE' });\n  }\n}\n\nexport default Request;\n","import { BASE_URL, TIME_OUT } from './config/config';\r\nimport Request from './request/request';\r\n\r\nconst request = new Request({\r\n  baseURL: BASE_URL,\r\n  timeout: TIME_OUT\r\n});\r\n\r\nexport default request;\r\n","import { interviewTime, LoginProps, searchUserType } from '@/type';\r\nimport request from '.';\r\n\r\nexport function login(props: LoginProps) {\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: props\r\n  });\r\n}\r\n\r\n// 获取报名情况\r\nexport function getEnrollData(direction: string) {\r\n  return request.get({\r\n    url: `/api/admin/orderBy/${direction}`\r\n  });\r\n}\r\n\r\nexport function getSearchData(params: searchUserType) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoByName?username=${params.username}`\r\n  });\r\n}\r\n\r\n// 获取面试时间\r\nexport function getInterviewTime() {\r\n  return request.get({\r\n    url: '/api/admin/getAllTime'\r\n  });\r\n}\r\n// 根据方向获取面试时间\r\nexport function getInterviewTimeDirec(direction: number) {\r\n  return request.get({\r\n    url: `/api/admin/getAllTimeByDir/${direction}`\r\n  });\r\n}\r\n\r\nexport async function refreshToken() {\r\n  const username = window.localStorage.getItem('username') as string;\r\n  const password = window.localStorage.getItem('password') as string;\r\n\r\n  return login({ username, password }).then((res) => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\n// 更改面试基本信息\r\nexport function updateInterviewInfo(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/updateTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 新增面试时间\r\nexport function addNewInterview(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/addTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 删除面试时间\r\nexport function deleteInterviewTime(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/deleteTime/${id}`\r\n  });\r\n}\r\n\r\n// 获取某个用户的基本信息\r\nexport function getUserInfoById(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoById`,\r\n    params: { id }\r\n  });\r\n}\r\n\r\nexport function refleshToken() {\r\n  const username = localStorage.getItem('username');\r\n  const password = localStorage.getItem('password');\r\n\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: {\r\n      username,\r\n      password\r\n    }\r\n  });\r\n}\r\n\r\n// 查询当前面试时间是否有被预约`\r\nexport function getAppointSec(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/ifSec/${id}`\r\n  });\r\n}\r\n\r\n// 查询多少分钟之前能预约\r\nexport function getPreRecruitTime() {\r\n  return request.get({\r\n    url: `/api/admin/getPreRecruitTime`\r\n  });\r\n}\r\n\r\n// 更改多少分钟之前能预约\r\nexport function editPreRecruitTime(time: number) {\r\n  return request.get({\r\n    url: `/api/admin/changeRecruitTime/${time}`\r\n  });\r\n}\r\n\r\n// 获取该面试时间的信息\r\nexport function getRecruitTimeInfo(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getThisTimeDelInfo/${id}`\r\n  });\r\n}\r\n// 获取当天面试时间\r\nexport function getTodayInfo(direction: number) {\r\n  return request.get({\r\n    url: `/api/admin/getThisDayTime/${direction}`\r\n  });\r\n}\r\n\r\n// 填写用户的评价\r\nexport function setUserAssess(id: number, assess: string) {\r\n  return request.get({\r\n    url: `/api/admin/setAssess/${id}`,\r\n    params: {\r\n      assess\r\n    }\r\n  });\r\n}\r\n/**\r\n *  获取当前面试时间的面试情况\r\n * @param id 面试时间id\r\n */\r\n\r\nexport function getIsInterviewByid(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getNow/${id}`\r\n  });\r\n}\r\n\r\n/**\r\n * 下一位面试者\r\n * @param id 面试时间\r\n * @param uid 上一位用户id\r\n */\r\n\r\nexport function nextInterview(id: number, uid?: number) {\r\n  return uid === undefined\r\n    ? request.get({\r\n        url: `/api/admin/getNext/${id}/0`\r\n      })\r\n    : request.get({\r\n        url: `/api/admin/getNext/${id}/${uid}`\r\n      });\r\n}\r\n","import styled from 'styled-components';\r\n\r\n// 样式处理\r\nexport const LoginWraaper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  height: 100vh;\r\n  .container {\r\n    padding: 30px 40px 0;\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    box-shadow: 0 0 8px 1px #eeeeee;\r\n    border-radius: 10px;\r\n    .ant-form-item-required {\r\n      color: #ffff;\r\n    }\r\n    img {\r\n      width: 180px;\r\n    }\r\n    .title {\r\n      text-align: center;\r\n      padding-bottom: 20px;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n\r\n  .bgc {\r\n    position: absolute;\r\n    z-index: -1;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport type { FC, ReactNode } from 'react';\r\nimport { login } from '@/service/api';\r\nimport { Button, Form, Input, message } from 'antd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { LoginProps } from '@/type';\r\nimport { LoginWraaper } from './style';\r\n\r\ninterface IProps {\r\n  children?: ReactNode;\r\n}\r\n\r\n// username: 123\r\n// pwd:123\r\n\r\nconst Login: FC<IProps> = () => {\r\n  const navigate = useNavigate();\r\n  const onFinish = (values: LoginProps) => {\r\n    login(values).then((res) => {\r\n      const { message: mes, data, code } = res;\r\n      console.log(res);\r\n\r\n      if (code === 200) {\r\n        message.success('登录成功');\r\n        window.localStorage.setItem('token', data);\r\n        window.localStorage.setItem('username', values.username);\r\n        window.localStorage.setItem('password', values.password);\r\n\r\n        navigate('/home');\r\n      } else {\r\n        message.error(mes);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <LoginWraaper>\r\n      <div className=\"container\">\r\n        <div className=\"title\">\r\n          <img src={require('@/assets/img/logo.png')}></img>\r\n        </div>\r\n        <Form\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            label=\"账号\"\r\n            name=\"username\"\r\n            rules={[{ required: true, message: '请填写账号 ！' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"密码\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: '请填写密码 ！' }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\" style={{ width: '100px' }}>\r\n              登录\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      <div className=\"bgc\">\r\n        <img src={require('@/assets/img/bgc.jpg')} alt=\"\" />\r\n      </div>\r\n    </LoginWraaper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["isRefreshing","requests","Request","config","_this","_classCallCheck","instance","this","axios","interceptors","request","use","localStorage","getItem","token","headers","concat","console","log","err","response","_response$data","data","code","message","Promise","resolve","push","refleshToken","then","res","setItem","forEach","item","catch","window","location","href","finally","reject","_createClass","key","value","_objectSpread","method","baseURL","timeout","login","props","url","params","getEnrollData","direction","getSearchData","username","getInterviewTimeDirec","updateInterviewInfo","addNewInterview","deleteInterviewTime","id","getUserInfoById","password","getAppointSec","getPreRecruitTime","editPreRecruitTime","time","getRecruitTimeInfo","setUserAssess","assess","getIsInterviewByid","nextInterview","uid","undefined","LoginWraaper","styled","_templateObject","_taggedTemplateLiteral","navigate","useNavigate","_jsxs","children","className","_jsx","src","require","Form","name","initialValues","remember","onFinish","values","mes","onFinishFailed","errorInfo","autoComplete","label","rules","required","Input","wrapperCol","offset","span","Button","type","htmlType","style","width","alt"],"sourceRoot":""}