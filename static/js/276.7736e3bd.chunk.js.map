{"version":3,"file":"static/js/276.7736e3bd.chunk.js","mappings":"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","sources":["components/layout-edit/style.ts","components/interview-item/style.ts","components/interview-item/index.tsx","components/layout-edit/index.tsx","service/config/config.ts","service/request/request.ts","service/index.ts","service/api.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const EditWrapper = styled.div`\r\n  .items-area {\r\n    position: relative;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n  }\r\n  .items-header {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 25px 0 20px;\r\n    padding: 10px 10px;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    .timeForm {\r\n      width: 100%;\r\n      height: 30px;\r\n      display: flex;\r\n      justify-content: space-around;\r\n    }\r\n  }\r\n\r\n  .emptyArea {\r\n    margin-top: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 40px;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    .button {\r\n      width: 100px;\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ItemWrapper = styled.div`\r\n  width: 33%;\r\n  padding: 15px;\r\n  .inner {\r\n    position: relative;\r\n    padding: 20px;\r\n    background-color: #fff;\r\n    > div {\r\n      margin-bottom: 10px;\r\n    }\r\n    .delete {\r\n      position: absolute;\r\n      top: 5px;\r\n      right: 5px;\r\n      padding: 5px;\r\n      border-radius: 3px;\r\n      transition: all ease 0.2s;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        background-color: rgba(0, 0, 0, 0.2);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport type { FC, ReactNode } from 'react';\r\nimport { interviewTime } from '@/type';\r\nimport { ItemWrapper } from './style';\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Popconfirm,\r\n  Radio,\r\n  TimePicker\r\n} from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n  addNewInterview,\r\n  deleteInterviewTime,\r\n  getAppointSec,\r\n  updateInterviewInfo\r\n} from '@/service/api';\r\n\r\ninterface IProps {\r\n  infoData: interviewTime;\r\n  children?: ReactNode;\r\n}\r\n\r\nconst InterviewItem: FC<IProps> = ({ infoData }) => {\r\n  const [isDelete, setIsDelete] = useState(false);\r\n  // const [isAppoint, setIsAppoint] = useState(false);\r\n  const [isDefault, setIsDefault] = useState(infoData.isdefalut ?? false);\r\n  const deleteItem = async () => {\r\n    if (!isDefault) {\r\n      const res = await deleteInterviewTime(infoData.id as number);\r\n      if (res.code === 200) {\r\n        message.success('删除成功');\r\n        setIsDelete(true);\r\n      } else {\r\n        message.error(res.message);\r\n      }\r\n    } else {\r\n      message.success('删除成功');\r\n      setIsDelete(true);\r\n    }\r\n  };\r\n  const formSubmit = (value: any) => {\r\n    const submitValue: interviewTime = {\r\n      ...infoData,\r\n      ...value,\r\n      startTime:\r\n        value['date'].format('YYYY-MM-DD') +\r\n        ' ' +\r\n        value['startTime'].format('HH:mm:ss'),\r\n      endTime:\r\n        value['date'].format('YYYY-MM-DD') +\r\n        ' ' +\r\n        value['endTime'].format('HH:mm:ss')\r\n    };\r\n    console.log(submitValue);\r\n\r\n    // console.log(submitValue);\r\n    if (isDefault) {\r\n      addNewInterview(submitValue).then((res) => {\r\n        if (res.code === 200) {\r\n          message.success(res.message);\r\n          setIsDefault(false);\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n      });\r\n    } else {\r\n      updateInterviewInfo(submitValue).then((res) => {\r\n        if (res.code === 200) {\r\n          message.success(res.message);\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 查询当前时间是否能被更改\r\n    getAppointSec(infoData.id as number).then((res) => {\r\n      console.log(infoData.id, res);\r\n    });\r\n  }, []);\r\n  return isDelete ? null : (\r\n    <ItemWrapper>\r\n      <div className=\"inner\">\r\n        <Form name=\"interviewForm\" onFinish={formSubmit}>\r\n          <Form.Item\r\n            rules={[{ required: true, message: '请填写日期' }]}\r\n            name=\"date\"\r\n            label=\"日期\"\r\n            initialValue={dayjs(infoData.startTime)}\r\n          >\r\n            <DatePicker format=\"YYYY-MM-DD\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"startTime\"\r\n            label=\"开始时间\"\r\n            initialValue={dayjs(infoData.startTime)}\r\n            rules={[{ required: true, message: '请填写时间' }]}\r\n          >\r\n            <TimePicker format={'HH:mm'} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"endTime\"\r\n            label=\"结束时间\"\r\n            initialValue={dayjs(infoData.endTime)}\r\n            rules={[{ required: true, message: '请填写日期' }]}\r\n          >\r\n            <TimePicker format={'HH:mm'} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"quota\"\r\n            label=\"总名额\"\r\n            initialValue={infoData.quota}\r\n            rules={[{ required: true, message: '请填写名额' }]}\r\n          >\r\n            <Input type=\"number\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"direction\"\r\n            label=\"方向\"\r\n            initialValue={infoData.direction}\r\n            rules={[{ required: true, message: '请填写方向' }]}\r\n          >\r\n            <Radio.Group>\r\n              <Radio value={1}> 前端 </Radio>\r\n              <Radio value={2}> 后端 </Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"location\"\r\n            label=\"地点\"\r\n            initialValue={infoData.location}\r\n            rules={[{ required: true, message: '请填写地点' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {isDefault ? '确定新建' : '更改'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <Popconfirm\r\n          title=\"删除面试时间\"\r\n          description=\"你确定要删除这个面试时间段吗？\"\r\n          okText=\"确定\"\r\n          cancelText=\"取消\"\r\n          onConfirm={deleteItem}\r\n        >\r\n          <div className=\"delete\">\r\n            <DeleteOutlined style={{ fontSize: '16px', color: 'red' }} />\r\n          </div>\r\n        </Popconfirm>\r\n      </div>\r\n    </ItemWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(InterviewItem);\r\n","import React, { useState, useEffect, useCallback } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport { EditWrapper } from './style';\nimport { interviewTime } from '@/type';\nimport InterviewItem from '../interview-item';\nimport { Button, Form, Input, FloatButton, Empty } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { getInterviewTime } from '@/service/api';\n\ninterface LayoutEditProps {\n  children?: ReactNode;\n}\n\nconst LayoutEdit: FC<LayoutEditProps> = () => {\n  const [infoData, setInfoData] = useState<interviewTime[]>([]);\n\n  // 新增面试时间\n  const addTime = useCallback(() => {\n    const date = new Date();\n    setInfoData([\n      ...infoData,\n      {\n        id: date.getTime(),\n        startTime: date.toLocaleString(),\n        endTime: date.toLocaleString(),\n        quota: '',\n        location: '',\n        spareQuota: 0,\n        isdefalut: true\n      }\n    ]);\n    // 滑动到底部;\n    setTimeout(() => {\n      window.scrollTo(0, document.documentElement.scrollHeight);\n    }, 50);\n  }, [infoData]);\n\n  // 更改面试前预约的时间\n  const changeRecruitTime = (value: { time: string }) => {\n    console.log(value);\n  };\n\n  // 获取面试数据\n  useEffect(() => {\n    getInterviewTime().then((res) => {\n      setInfoData(res.data);\n    });\n  }, []);\n  return (\n    <EditWrapper>\n      <div className=\"items-header\">\n        <Form name=\"timeForm\" onFinish={changeRecruitTime} className=\"timeForm\">\n          <Form.Item\n            label=\"面试开始前多久能预约（单位：分钟）\"\n            name=\"time\"\n            initialValue={0}\n          >\n            <Input type=\"number\" />\n          </Form.Item>\n          <Form.Item>\n            <Button htmlType=\"submit\" type=\"primary\">\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n      <div className=\"items-area\">\n        {infoData.length !== 0 ? (\n          infoData.map((item) => {\n            return <InterviewItem infoData={item} key={item.id} />;\n          })\n        ) : (\n          <div className=\"emptyArea\">\n            <Empty\n              imageStyle={{ height: 120 }}\n              description={\n                <span style={{ color: '#94979e' }}>什么都没有~</span>\n              }\n            >\n              <Button type=\"primary\" onClick={addTime}>\n                添加面试时间\n              </Button>\n            </Empty>\n          </div>\n        )}\n      </div>\n\n      <div className=\"items-tips\">\n        <FloatButton\n          type=\"primary\"\n          style={{ right: 24 }}\n          icon={<PlusOutlined />}\n          tooltip={<div>新增面试时间</div>}\n          onClick={addTime}\n        />\n      </div>\n    </EditWrapper>\n  );\n};\n\nexport default LayoutEdit;\n","export const BASE_URL = 'https://www.yidongmall.cn';\r\n\r\nexport const TIME_OUT = 10000;\r\n","import axios, { AxiosResponse, InternalAxiosRequestConfig } from 'axios';\nimport type { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport type { eAxiosResponse } from './type';\nimport { refleshToken } from '../api';\nimport { TokenFunc } from '@/type';\n\n// 是否正在刷新的标记\nlet isRefreshing = false;\n// 重试队列，每一项将是一个待执行的函数形式\nlet requests: TokenFunc[] = [];\n\nclass Request {\n  // axios 实例\n  instance: AxiosInstance;\n\n  constructor(config: AxiosRequestConfig) {\n    this.instance = axios.create(config);\n    this.instance.interceptors.request.use(\n      (config: InternalAxiosRequestConfig) => {\n        if (localStorage.getItem('token') !== null) {\n          const token = localStorage.getItem('token') as string;\n          config.headers['token'] = `${token}`;\n        } else {\n          console.log('删除 token 了');\n          delete config.headers['Authorization'];\n        }\n        return config;\n      },\n      (err: AxiosResponse) => {\n        return err;\n      }\n    );\n\n    this.instance.interceptors.response.use(\n      (response) => {\n        // 获取code值\n        const { code, message } = response.data;\n        // 执行无痛刷新token\n        if (code === 500 && message === 'token无效!请重新登录!') {\n          const config = response.config;\n          if (!isRefreshing) {\n            isRefreshing = true;\n            return refleshToken()\n              .then((res) => {\n                const { data: token } = res;\n                // 设置token\n                localStorage.setItem('token', token);\n                console.log('token设置完毕');\n                config.headers['token'] = token;\n\n                // 已经刷新了token,将队列里的请求进行重试\n                requests.forEach((item) => item(token));\n                // 将重试队列置空\n                requests = [];\n                return this.instance.request(config);\n              })\n              .catch((res) => {\n                // 如果刷新token无效则直接回到登录页面\n                console.log('reflashtoken error = >', res);\n                window.location.href = '/Login';\n              })\n              .finally(() => {\n                isRefreshing = false;\n              });\n          } else {\n            // 此时代表正在刷新token,返回一个未执行resolve的promise\n            return new Promise((resolve) => {\n              requests.push((token) => {\n                config.headers['token'] = token;\n                // 发送请求\n                resolve(this.instance.request(config));\n              });\n            });\n          }\n        }\n        return response.data;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n  }\n\n  request<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.instance.request<any, T>(config);\n  }\n  get<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'GET' });\n  }\n  post<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'POST' });\n  }\n  delete<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'DELETE' });\n  }\n}\n\nexport default Request;\n","import { BASE_URL, TIME_OUT } from './config/config';\r\nimport Request from './request/request';\r\n\r\nconst request = new Request({\r\n  baseURL: BASE_URL,\r\n  timeout: TIME_OUT\r\n});\r\n\r\nexport default request;\r\n","import { interviewTime, LoginProps, searchUserType } from '@/type';\r\nimport request from '.';\r\n\r\nexport function login(props: LoginProps) {\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: props\r\n  });\r\n}\r\n\r\n// 获取报名情况\r\nexport function getEnrollData(direction: string) {\r\n  return request.get({\r\n    url: `/api/admin/orderBy/${direction}`\r\n  });\r\n}\r\n\r\nexport function getSearchData(params: searchUserType) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoByName?username=${params.username}`\r\n  });\r\n}\r\n\r\n// 获取面试时间\r\nexport function getInterviewTime() {\r\n  return request.get({\r\n    url: '/api/admin/getAllTime'\r\n  });\r\n}\r\n\r\nexport async function refreshToken() {\r\n  const username = window.localStorage.getItem('username') as string;\r\n  const password = window.localStorage.getItem('password') as string;\r\n\r\n  return login({ username, password }).then((res) => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\n// 更改面试基本信息\r\nexport function updateInterviewInfo(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/updateTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 新增面试时间\r\nexport function addNewInterview(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/addTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 删除面试时间\r\nexport function deleteInterviewTime(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/deleteTime/${id}`\r\n  });\r\n}\r\n\r\n// 获取某个用户的基本信息\r\nexport function getUserInfoById(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoById`,\r\n    params: { id }\r\n  });\r\n}\r\n\r\nexport function refleshToken() {\r\n  const username = localStorage.getItem('username');\r\n  const password = localStorage.getItem('password');\r\n\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: {\r\n      username,\r\n      password\r\n    }\r\n  });\r\n}\r\n\r\n// 查询当前面试时间是否有被预约`\r\nexport function getAppointSec(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/ifSec/${id}`\r\n  });\r\n}\r\n"],"names":["EditWrapper","styled","_templateObject","_taggedTemplateLiteral","ItemWrapper","InterviewItem","_ref","_infoData$isdefalut","infoData","_useState","useState","_useState2","_slicedToArray","isDelete","setIsDelete","_useState3","isdefalut","_useState4","isDefault","setIsDefault","deleteItem","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","deleteInterviewTime","id","sent","code","message","stop","apply","arguments","useEffect","getAppointSec","then","console","log","_jsx","children","_jsxs","className","Form","name","onFinish","value","submitValue","_objectSpread","startTime","format","endTime","addNewInterview","updateInterviewInfo","rules","required","label","initialValue","dayjs","DatePicker","TimePicker","quota","Input","type","direction","Radio","location","Button","htmlType","Popconfirm","title","description","okText","cancelText","onConfirm","DeleteOutlined","style","fontSize","color","memo","setInfoData","addTime","useCallback","date","Date","concat","_toConsumableArray","getTime","toLocaleString","spareQuota","setTimeout","window","scrollTo","document","documentElement","scrollHeight","getInterviewTime","data","length","map","item","Empty","imageStyle","height","onClick","FloatButton","right","icon","PlusOutlined","tooltip","isRefreshing","requests","Request","config","_this","_classCallCheck","instance","this","axios","interceptors","request","use","localStorage","getItem","token","headers","err","response","_response$data","Promise","resolve","push","refleshToken","setItem","forEach","catch","href","finally","reject","_createClass","key","method","baseURL","timeout","login","props","url","params","getEnrollData","getSearchData","username","getUserInfoById","password"],"sourceRoot":""}