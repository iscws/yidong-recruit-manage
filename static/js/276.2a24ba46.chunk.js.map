{"version":3,"file":"static/js/276.2a24ba46.chunk.js","mappings":"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","sources":["components/layout-edit/style.ts","components/interview-item/style.ts","components/interview-item/index.tsx","components/layout-edit/index.tsx","service/config/config.ts","service/index.ts","service/request/request.ts","service/api.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const EditWrapper = styled.div`\r\n  .items-area {\r\n    position: relative;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n  }\r\n  .items-header {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 25px 0 20px;\r\n    padding: 10px 10px;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    .timeForm {\r\n      width: 100%;\r\n      height: 30px;\r\n      display: flex;\r\n      justify-content: space-around;\r\n    }\r\n  }\r\n\r\n  .emptyArea {\r\n    margin-top: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 40px;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    .button {\r\n      width: 100px;\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ItemWrapper = styled.div`\r\n  width: 33%;\r\n  padding: 15px;\r\n  .inner {\r\n    position: relative;\r\n    padding: 20px;\r\n    background-color: #fff;\r\n    > div {\r\n      margin-bottom: 10px;\r\n    }\r\n    .delete {\r\n      position: absolute;\r\n      top: 5px;\r\n      right: 5px;\r\n      padding: 5px;\r\n      border-radius: 3px;\r\n      transition: all ease 0.2s;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        background-color: rgba(0, 0, 0, 0.2);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { memo, useState } from 'react';\r\nimport type { FC, ReactNode } from 'react';\r\nimport { interviewTime } from '@/type';\r\nimport { ItemWrapper } from './style';\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Popconfirm,\r\n  Radio\r\n} from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n  addNewInterview,\r\n  deleteInterviewTime,\r\n  updateInterviewInfo\r\n} from '@/service/api';\r\n\r\ninterface IProps {\r\n  infoData: interviewTime;\r\n  children?: ReactNode;\r\n}\r\n\r\nconst InterviewItem: FC<IProps> = ({ infoData }) => {\r\n  const [isDelete, setIsDelete] = useState(false);\r\n  const deleteItem = async () => {\r\n    if (infoData.isdefalut === undefined) {\r\n      const res = await deleteInterviewTime(infoData.id as number);\r\n      if (res.code === 200) {\r\n        message.success('删除成功');\r\n        setIsDelete(true);\r\n      } else {\r\n        message.error(res.message);\r\n      }\r\n    }\r\n  };\r\n  const formSubmit = (value: any) => {\r\n    const submitValue: interviewTime = {\r\n      ...infoData,\r\n      ...value,\r\n      startTime: value['startTime'].format('YYYY-MM-DD HH:mm:ss'),\r\n      endTime: value['endTime'].format('YYYY-MM-DD HH:mm:ss')\r\n    };\r\n\r\n    // console.log(submitValue);\r\n    if (infoData.isdefalut === true) {\r\n      const newValue = {\r\n        startTime: submitValue.startTime,\r\n        endTime: submitValue.endTime,\r\n        direction: 1,\r\n        location: submitValue.location,\r\n        quota: submitValue.quota,\r\n        spareQuota: submitValue.spareQuota\r\n      };\r\n\r\n      addNewInterview(newValue).then((res) => {\r\n        if (res.code === 200) {\r\n          message.success(res.message);\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n        infoData.isdefalut = false;\r\n      });\r\n    } else {\r\n      updateInterviewInfo(submitValue).then((res) => {\r\n        if (res.code === 200) {\r\n          message.success(res.message);\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return isDelete ? null : (\r\n    <ItemWrapper>\r\n      <div className=\"inner\">\r\n        <Form name=\"interviewForm\" onFinish={formSubmit}>\r\n          <Form.Item\r\n            rules={[{ required: true, message: '请填写日期' }]}\r\n            name=\"startTime\"\r\n            label=\"开始时间\"\r\n            initialValue={dayjs(infoData.startTime)}\r\n          >\r\n            <DatePicker format=\"YYYY-MM-DD HH:mm:ss\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"endTime\"\r\n            label=\"结束时间\"\r\n            initialValue={dayjs(infoData.endTime)}\r\n            rules={[{ required: true, message: '请填写日期' }]}\r\n          >\r\n            <DatePicker format=\"YYYY-MM-DD HH:mm:ss\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"quota\"\r\n            label=\"总名额\"\r\n            initialValue={infoData.quota}\r\n            rules={[{ required: true, message: '请填写名额' }]}\r\n          >\r\n            <Input type=\"number\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"direction\"\r\n            label=\"方向\"\r\n            initialValue={infoData.direction}\r\n            rules={[{ required: true, message: '请填写方向' }]}\r\n          >\r\n            <Radio.Group>\r\n              <Radio value={1}> 前端 </Radio>\r\n              <Radio value={2}> 后端 </Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"location\"\r\n            label=\"地点\"\r\n            initialValue={infoData.location}\r\n            rules={[{ required: true, message: '请填写地点' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {infoData.isdefalut === true ? '确定新建' : '更改'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <Popconfirm\r\n          title=\"删除面试时间\"\r\n          description=\"你确定要删除这个面试时间段吗？\"\r\n          okText=\"确定\"\r\n          cancelText=\"取消\"\r\n          onConfirm={deleteItem}\r\n        >\r\n          <div className=\"delete\">\r\n            <DeleteOutlined style={{ fontSize: '16px', color: 'red' }} />\r\n          </div>\r\n        </Popconfirm>\r\n      </div>\r\n    </ItemWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(InterviewItem);\r\n","import React, { useState, useEffect, useCallback } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport { EditWrapper } from './style';\nimport { interviewTime } from '@/type';\nimport InterviewItem from '../interview-item';\nimport { Button, Form, Input, FloatButton, Empty } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { getInterviewTime } from '@/service/api';\n\ninterface LayoutEditProps {\n  children?: ReactNode;\n}\n\nconst LayoutEdit: FC<LayoutEditProps> = () => {\n  const [infoData, setInfoData] = useState<interviewTime[]>([]);\n\n  // 新增面试时间\n  const addTime = useCallback(() => {\n    const date = new Date();\n    setInfoData([\n      ...infoData,\n      {\n        id: date.getTime(),\n        startTime: date.toLocaleString(),\n        endTime: date.toLocaleString(),\n        quota: '',\n        location: '',\n        spareQuota: 0,\n        isdefalut: true\n      }\n    ]);\n    // 滑动到底部;\n    setTimeout(() => {\n      window.scrollTo(0, document.documentElement.scrollHeight);\n    }, 50);\n  }, [infoData]);\n\n  // 更改面试前预约的时间\n  const changeRecruitTime = (value: { time: string }) => {\n    console.log(value);\n  };\n\n  // 获取面试数据\n  useEffect(() => {\n    getInterviewTime().then((res) => {\n      setInfoData(res.data);\n    });\n  }, []);\n  return (\n    <EditWrapper>\n      <div className=\"items-header\">\n        <Form name=\"timeForm\" onFinish={changeRecruitTime} className=\"timeForm\">\n          <Form.Item\n            label=\"面试开始前多久能预约（单位：分钟）\"\n            name=\"time\"\n            initialValue={0}\n          >\n            <Input type=\"number\" />\n          </Form.Item>\n          <Form.Item>\n            <Button htmlType=\"submit\" type=\"primary\">\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n      <div className=\"items-area\">\n        {infoData.length !== 0 ? (\n          infoData.map((item) => {\n            return <InterviewItem infoData={item} key={item.id} />;\n          })\n        ) : (\n          <div className=\"emptyArea\">\n            <Empty\n              imageStyle={{ height: 120 }}\n              description={\n                <span style={{ color: '#94979e' }}>什么都没有~</span>\n              }\n            >\n              <Button type=\"primary\" onClick={addTime}>\n                添加面试时间\n              </Button>\n            </Empty>\n          </div>\n        )}\n      </div>\n\n      <div className=\"items-tips\">\n        <FloatButton\n          type=\"primary\"\n          style={{ right: 24 }}\n          icon={<PlusOutlined />}\n          tooltip={<div>新增面试时间</div>}\n          onClick={addTime}\n        />\n      </div>\n    </EditWrapper>\n  );\n};\n\nexport default LayoutEdit;\n","export const BASE_URL = 'https://www.yidongmall.cn';\r\n\r\nexport const TIME_OUT = 10000;\r\n","import { BASE_URL, TIME_OUT } from './config/config';\r\nimport Request from './request/request';\r\n\r\nconst request = new Request({\r\n  baseURL: BASE_URL,\r\n  timeout: TIME_OUT\r\n});\r\n\r\nexport default request;\r\n","import axios, { AxiosResponse, InternalAxiosRequestConfig } from 'axios';\nimport type { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport type { eAxiosResponse } from './type';\n\nclass Request {\n  // axios 实例\n  instance: AxiosInstance;\n\n  constructor(config: AxiosRequestConfig) {\n    this.instance = axios.create(config);\n\n    this.instance.interceptors.request.use(\n      (config: InternalAxiosRequestConfig) => {\n        if (localStorage.getItem('token') !== null) {\n          const token = localStorage.getItem('token') as string;\n          config.headers['token'] = `${token}`;\n        } else {\n          console.log('删除 token 了');\n          delete config.headers['Authorization'];\n        }\n        return config;\n      },\n      (err: AxiosResponse) => {\n        return err;\n      }\n    );\n\n    this.instance.interceptors.response.use(\n      (response) => {\n        return response.data;\n      },\n      (err) => {\n        return err;\n      }\n    );\n  }\n\n  request<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.instance.request<any, T>(config);\n  }\n  get<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'GET' });\n  }\n  post<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'POST' });\n  }\n  delete<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'DELETE' });\n  }\n}\n\nexport default Request;\n","import { interviewTime, LoginProps, searchUserType } from '@/type';\r\nimport request from '.';\r\n\r\nexport function login(props: LoginProps) {\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: props\r\n  });\r\n}\r\n\r\n// 获取报名情况\r\nexport function getEnrollData(direction: string) {\r\n  return request.get({\r\n    url: `/api/admin/orderBy/${direction}`\r\n  });\r\n}\r\n\r\nexport function getSearchData(params: searchUserType) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoByName?username=${params.username}`\r\n  });\r\n}\r\n\r\n// 获取面试时间\r\nexport function getInterviewTime() {\r\n  return request.get({\r\n    url: '/api/admin/getAllTime'\r\n  });\r\n}\r\n\r\nexport async function refreshToken() {\r\n  const username = window.localStorage.getItem('username') as string;\r\n  const password = window.localStorage.getItem('password') as string;\r\n\r\n  return login({ username, password }).then((res) => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\n// 更改面试基本信息\r\nexport function updateInterviewInfo(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/updateTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 新增面试时间\r\nexport function addNewInterview(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/addTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 删除面试时间\r\nexport function deleteInterviewTime(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/deleteTime/${id}`\r\n  });\r\n}\r\n\r\n// 获取某个用户的基本信息\r\nexport function getUserInfoById(id: number) {\r\n  return request.get({\r\n    url: '/api/admin/getUserInfoById',\r\n    data: id\r\n  });\r\n}\r\n"],"names":["EditWrapper","styled","_templateObject","_taggedTemplateLiteral","ItemWrapper","InterviewItem","_ref","infoData","_useState","useState","_useState2","_slicedToArray","isDelete","setIsDelete","deleteItem","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","undefined","isdefalut","deleteInterviewTime","id","sent","code","message","stop","apply","arguments","_jsx","children","_jsxs","className","Form","name","onFinish","value","submitValue","_objectSpread","startTime","format","endTime","newValue","direction","location","quota","spareQuota","addNewInterview","then","updateInterviewInfo","rules","required","label","initialValue","dayjs","DatePicker","Input","type","Radio","Button","htmlType","Popconfirm","title","description","okText","cancelText","onConfirm","DeleteOutlined","style","fontSize","color","memo","setInfoData","addTime","useCallback","date","Date","concat","_toConsumableArray","getTime","toLocaleString","setTimeout","window","scrollTo","document","documentElement","scrollHeight","useEffect","getInterviewTime","data","console","log","length","map","item","Empty","imageStyle","height","onClick","FloatButton","right","icon","PlusOutlined","tooltip","Request","config","_classCallCheck","instance","this","axios","interceptors","request","use","localStorage","getItem","token","headers","err","response","_createClass","key","method","baseURL","timeout","login","props","url","params","getEnrollData","getSearchData","username","getUserInfoById"],"sourceRoot":""}