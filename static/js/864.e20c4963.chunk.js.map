{"version":3,"file":"static/js/864.e20c4963.chunk.js","mappings":"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","sources":["type/index.ts","components/layout-enroll/style.ts","components/layout-enroll/index.tsx","service/config/config.ts","service/index.ts","service/request/request.ts","service/api.ts"],"sourcesContent":["import { MenuProps } from 'antd';\r\nimport { ColumnsType } from 'antd/es/table';\r\nexport interface userEnrollType {\r\n  id: string;\r\n  username: number;\r\n  sex: string;\r\n  studentId: string;\r\n  phone: number;\r\n  college: string;\r\n  major: string;\r\n  introduction: string;\r\n  status: string;\r\n  interviewTime?: interviewTime;\r\n  assess?: string;\r\n}\r\n\r\nexport type MenuItemType = Required<MenuProps>['items'][number];\r\nexport interface MenuType {\r\n  type: 'enroll' | 'interview' | 'edit';\r\n}\r\n// 登录数据\r\nexport type LoginProps = {\r\n  username: string;\r\n  password: string;\r\n  remember?: boolean;\r\n};\r\n\r\nexport const columns: ColumnsType<userEnrollType> = [\r\n  {\r\n    title: '名字',\r\n    dataIndex: 'username',\r\n    key: 'username'\r\n  },\r\n  {\r\n    title: '性别',\r\n    key: 'sex',\r\n    dataIndex: 'sex'\r\n  },\r\n  {\r\n    title: '学号',\r\n    key: 'studentId',\r\n    dataIndex: 'studentId'\r\n  },\r\n  {\r\n    title: '手机号码',\r\n    key: 'phone',\r\n    dataIndex: 'phone'\r\n  },\r\n  {\r\n    title: '学院',\r\n    key: 'college',\r\n    dataIndex: 'college'\r\n  },\r\n  {\r\n    title: '专业',\r\n    key: 'major',\r\n    dataIndex: 'major'\r\n  },\r\n  {\r\n    title: '状态',\r\n    key: 'status',\r\n    dataIndex: 'status'\r\n  }\r\n];\r\n\r\nexport interface searchUserType {\r\n  username: string;\r\n}\r\n\r\nexport interface interviewTime {\r\n  id?: number | string;\r\n  startTime: string;\r\n  endTime: string;\r\n  quota?: string;\r\n  location: string;\r\n  spareQuota?: number;\r\n  isdefalut?: boolean;\r\n  direction?: number;\r\n}\r\n\r\n// 点击搜索后返回的对象\r\nexport interface searchType {\r\n  username: string;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const EnrollWrapper = styled.div`\r\n  text-align: right;\r\n  .area {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 30px;\r\n    .search-form {\r\n      display: flex;\r\n\r\n      .submit-btn {\r\n        margin-left: 15px;\r\n      }\r\n    }\r\n  }\r\n  .tips {\r\n    display: inline-block;\r\n    margin: 20px 0;\r\n    padding: 10px 10px;\r\n    text-align: left;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    background-color: rgba(0, 21, 41, 0.7);\r\n    cursor: default;\r\n  }\r\n`;\r\n","import React, { useCallback, memo, useState, useEffect } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport { columns, searchType, userEnrollType } from '@/type';\nimport { Button, Form, Input, Table } from 'antd';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { EnrollWrapper } from './style';\nimport { getEnrollData, getSearchData } from '@/service/api';\n\ninterface LayoutEnrollProps {\n  children?: ReactNode;\n}\n\nconst LayoutEnroll: FC<LayoutEnrollProps> = () => {\n  const [infoData, setInfoData] = useState<userEnrollType[]>([]);\n  const params = useParams();\n  const navigate = useNavigate();\n\n  // 进入用户详情页\n  const toUserDetail = useCallback((record: userEnrollType) => {\n    navigate(`/detail/${record.id}`);\n  }, []);\n\n  // 搜索\n  const searchFinish = (value: searchType) => {\n    getSearchData(value).then((res) => {\n      console.log(res);\n      setInfoData(res.data);\n    });\n  };\n  // 更新数据\n  useEffect(() => {\n    reflashData();\n  }, [params]);\n\n  const reflashData = () => {\n    getEnrollData(params.direction as string).then((res) => {\n      setInfoData(res.data);\n    });\n  };\n  return (\n    <EnrollWrapper>\n      <div className=\"area\">\n        <div className=\"search\">\n          <Form className=\"search-form\" onFinish={searchFinish}>\n            <Form.Item\n              name=\"username\"\n              rules={[{ required: true, message: '请至少输入一个字' }]}\n            >\n              <Input placeholder=\"请输入完整的姓名\"></Input>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"submit-btn\">\n                搜索\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n        <div className=\"btn\">\n          <Button onClick={reflashData}>刷新数据</Button>\n        </div>\n      </div>\n      <div className=\"tips\">双击选项进入用户详情页</div>\n      <Table\n        columns={columns}\n        dataSource={infoData}\n        rowKey=\"id\"\n        onRow={(record) => {\n          return {\n            onDoubleClick: () => {\n              console.log('record:', record);\n\n              toUserDetail(record);\n            }\n          };\n        }}\n      />\n    </EnrollWrapper>\n  );\n};\n\nexport default memo(LayoutEnroll);\n","export const BASE_URL = 'https://www.yidongmall.cn';\r\n\r\nexport const TIME_OUT = 10000;\r\n","import { BASE_URL, TIME_OUT } from './config/config';\r\nimport Request from './request/request';\r\n\r\nconst request = new Request({\r\n  baseURL: BASE_URL,\r\n  timeout: TIME_OUT\r\n});\r\n\r\nexport default request;\r\n","import axios, { AxiosResponse, InternalAxiosRequestConfig } from 'axios';\nimport type { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport type { eAxiosResponse } from './type';\n\nclass Request {\n  // axios 实例\n  instance: AxiosInstance;\n\n  constructor(config: AxiosRequestConfig) {\n    this.instance = axios.create(config);\n\n    this.instance.interceptors.request.use(\n      (config: InternalAxiosRequestConfig) => {\n        if (localStorage.getItem('token') !== null) {\n          const token = localStorage.getItem('token') as string;\n          config.headers['token'] = `${token}`;\n        } else {\n          console.log('删除 token 了');\n          delete config.headers['Authorization'];\n        }\n        return config;\n      },\n      (err: AxiosResponse) => {\n        return err;\n      }\n    );\n\n    this.instance.interceptors.response.use(\n      (response) => {\n        return response.data;\n      },\n      (err) => {\n        return err;\n      }\n    );\n  }\n\n  request<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.instance.request<any, T>(config);\n  }\n  get<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'GET' });\n  }\n  post<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'POST' });\n  }\n  delete<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'DELETE' });\n  }\n}\n\nexport default Request;\n","import { interviewTime, LoginProps, searchUserType } from '@/type';\r\nimport request from '.';\r\n\r\nexport function login(props: LoginProps) {\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: props\r\n  });\r\n}\r\n\r\n// 获取报名情况\r\nexport function getEnrollData(direction: string) {\r\n  return request.get({\r\n    url: `/api/admin/orderBy/${direction}`\r\n  });\r\n}\r\n\r\nexport function getSearchData(params: searchUserType) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoByName?username=${params.username}`\r\n  });\r\n}\r\n\r\n// 获取面试时间\r\nexport function getInterviewTime() {\r\n  return request.get({\r\n    url: '/api/admin/getAllTime'\r\n  });\r\n}\r\n\r\nexport async function refreshToken() {\r\n  const username = window.localStorage.getItem('username') as string;\r\n  const password = window.localStorage.getItem('password') as string;\r\n\r\n  return login({ username, password }).then((res) => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\n// 更改面试基本信息\r\nexport function updateInterviewInfo(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/updateTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 新增面试时间\r\nexport function addNewInterview(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/addTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 删除面试时间\r\nexport function deleteInterviewTime(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/deleteTime/${id}`\r\n  });\r\n}\r\n\r\n// 获取某个用户的基本信息\r\nexport function getUserInfoById(id: number) {\r\n  return request.get({\r\n    url: '/api/admin/getUserInfoById',\r\n    data: id\r\n  });\r\n}\r\n"],"names":["columns","title","dataIndex","key","EnrollWrapper","styled","_templateObject","_taggedTemplateLiteral","LayoutEnroll","_useState","useState","_useState2","_slicedToArray","infoData","setInfoData","params","useParams","navigate","useNavigate","toUserDetail","useCallback","record","concat","id","useEffect","reflashData","getEnrollData","direction","then","res","data","_jsxs","children","className","_jsx","Form","onFinish","value","getSearchData","console","log","name","rules","required","message","Input","placeholder","Button","type","htmlType","onClick","Table","dataSource","rowKey","onRow","onDoubleClick","memo","Request","config","_classCallCheck","instance","this","axios","interceptors","request","use","localStorage","getItem","token","headers","err","response","_createClass","_objectSpread","method","baseURL","timeout","login","props","url","username","getInterviewTime","updateInterviewInfo","addNewInterview","deleteInterviewTime","getUserInfoById"],"sourceRoot":""}