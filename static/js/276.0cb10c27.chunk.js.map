{"version":3,"file":"static/js/276.0cb10c27.chunk.js","mappings":"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","sources":["components/layout-edit/style.ts","components/interview-item/style.ts","components/interview-item/index.tsx","components/layout-edit/index.tsx","hooks/useThrottle.ts","service/config/config.ts","service/request/request.ts","service/index.ts","service/api.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const EditWrapper = styled.div`\r\n  .items-area {\r\n    position: relative;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n  }\r\n  .items-header {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 25px 0 20px;\r\n    padding: 10px 10px;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    .timeForm {\r\n      width: 100%;\r\n      height: 30px;\r\n      display: flex;\r\n      justify-content: space-around;\r\n    }\r\n  }\r\n\r\n  .emptyArea {\r\n    margin-top: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 40px;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    .button {\r\n      width: 100px;\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ItemWrapper = styled.div`\r\n  width: 33.3%;\r\n  padding: 15px;\r\n  .inner {\r\n    position: relative;\r\n    padding: 20px;\r\n    background-color: #fff;\r\n    > div {\r\n      margin-bottom: 10px;\r\n    }\r\n    .tips {\r\n      position: absolute;\r\n      left: 0px;\r\n      color: red;\r\n      font-size: 8px;\r\n    }\r\n    .delete {\r\n      position: absolute;\r\n      top: 5px;\r\n      right: 5px;\r\n      padding: 5px;\r\n      border-radius: 3px;\r\n      transition: all ease 0.2s;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        background-color: rgba(0, 0, 0, 0.2);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport type { FC, ReactNode } from 'react';\r\nimport { interviewTime } from '@/type';\r\nimport { ItemWrapper } from './style';\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Popconfirm,\r\n  Radio,\r\n  TimePicker\r\n} from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n  addNewInterview,\r\n  deleteInterviewTime,\r\n  getAppointSec,\r\n  updateInterviewInfo\r\n} from '@/service/api';\r\nimport { useParams } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  infoData: interviewTime;\r\n  children?: ReactNode;\r\n}\r\n\r\nconst InterviewItem: FC<IProps> = ({ infoData }) => {\r\n  const [isDelete, setIsDelete] = useState(false);\r\n  const [isAppoint, setIsAppoint] = useState<boolean>(false);\r\n  const [isDefault, setIsDefault] = useState(infoData.isdefalut ?? false);\r\n  const params = useParams();\r\n  const deleteItem = async () => {\r\n    if (!isDefault) {\r\n      const res = await deleteInterviewTime(infoData.id as number);\r\n      if (res.code !== 200) {\r\n        message.error(res.message);\r\n        console.log(res);\r\n\r\n        return;\r\n      }\r\n    }\r\n    message.success('删除成功');\r\n    setIsDelete(true);\r\n  };\r\n  const formSubmit = (value: any) => {\r\n    const submitValue: interviewTime = {\r\n      id: infoData.id as number,\r\n      location: value.location,\r\n      direction: Number(params.direction),\r\n      quota: value.quota,\r\n      startTime:\r\n        value['date'].format('YYYY-MM-DD') +\r\n        ' ' +\r\n        value['startTime'].format('HH:mm:ss'),\r\n      endTime:\r\n        value['date'].format('YYYY-MM-DD') +\r\n        ' ' +\r\n        value['endTime'].format('HH:mm:ss')\r\n    };\r\n    if (isDefault) {\r\n      addNewInterview(submitValue).then((res) => {\r\n        if (res.code === 200) {\r\n          infoData.id = res.data;\r\n          message.success('添加成功');\r\n          setIsDefault(false);\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n      });\r\n    } else {\r\n      updateInterviewInfo(submitValue).then((res) => {\r\n        if (res.code === 200) {\r\n          message.success(res.message);\r\n        } else {\r\n          message.error(res.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 查询当前时间是否能被更改\r\n    !isDefault &&\r\n      getAppointSec(infoData.id as number).then((res) => {\r\n        console.log(res);\r\n\r\n        setIsAppoint(!res.data as boolean);\r\n      });\r\n  }, []);\r\n  return isDelete ? null : (\r\n    <ItemWrapper>\r\n      <div className=\"inner\">\r\n        <Form name=\"interviewForm\" onFinish={formSubmit}>\r\n          <Form.Item\r\n            rules={[{ required: true, message: '请填写日期' }]}\r\n            name=\"date\"\r\n            label=\"日期\"\r\n            initialValue={dayjs(infoData.startTime)}\r\n          >\r\n            <DatePicker format=\"YYYY-MM-DD\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"startTime\"\r\n            label=\"开始时间\"\r\n            initialValue={dayjs(infoData.startTime)}\r\n            rules={[{ required: true, message: '请填写时间' }]}\r\n          >\r\n            <TimePicker format={'HH:mm'} disabled={isAppoint} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"endTime\"\r\n            label=\"结束时间\"\r\n            initialValue={dayjs(infoData.endTime)}\r\n            rules={[{ required: true, message: '请填写日期' }]}\r\n          >\r\n            <TimePicker format={'HH:mm'} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"quota\"\r\n            label=\"总名额\"\r\n            initialValue={infoData.quota}\r\n            rules={[{ required: true, message: '请填写名额' }]}\r\n          >\r\n            <Input type=\"number\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"location\"\r\n            label=\"地点\"\r\n            initialValue={infoData.location}\r\n            rules={[{ required: true, message: '请填写地点' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"方向\"\r\n            initialValue={infoData.direction}\r\n            rules={[{ required: true, message: '请填写方向' }]}\r\n          >\r\n            <Radio.Group value={infoData.direction}>\r\n              <Radio value={1}> 前端 </Radio>\r\n              <Radio value={2}> 后端 </Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {isDefault ? '确定新建' : '更改'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <Popconfirm\r\n          title=\"删除面试时间\"\r\n          description=\"你确定要删除这个面试时间段吗？\"\r\n          okText=\"确定\"\r\n          cancelText=\"取消\"\r\n          onConfirm={deleteItem}\r\n        >\r\n          <div className=\"delete\">\r\n            <DeleteOutlined style={{ fontSize: '16px', color: 'red' }} />\r\n          </div>\r\n        </Popconfirm>\r\n      </div>\r\n    </ItemWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(InterviewItem);\r\n","import React, { useState, useEffect, useCallback } from 'react';\nimport type { FC, ReactNode } from 'react';\nimport { EditWrapper } from './style';\nimport { interviewTime } from '@/type';\nimport InterviewItem from '../interview-item';\nimport { Button, Form, Input, FloatButton, Empty, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport {\n  editPreRecruitTime,\n  getInterviewTimeDirec,\n  getPreRecruitTime\n} from '@/service/api';\nimport { useParams } from 'react-router-dom';\nimport { useThrottle } from '@/hooks/useThrottle';\n\ninterface LayoutEditProps {\n  children?: ReactNode;\n}\n\nconst LayoutEdit: FC<LayoutEditProps> = () => {\n  const [infoData, setInfoData] = useState<interviewTime[]>([]);\n  const [preTime, setPreTime] = useState(0);\n  const params = useParams();\n  // 新增面试时间\n  const addTime = useCallback(() => {\n    const date = new Date();\n    setInfoData([\n      ...infoData,\n      {\n        id: date.getTime(),\n        startTime: date.toLocaleString(),\n        endTime: date.toLocaleString(),\n        quota: '',\n        location: '',\n        spareQuota: 0,\n        isdefalut: true,\n        direction: Number(params.direction)\n      }\n    ]);\n    // 滑动到底部;\n    setTimeout(() => {\n      window.scrollTo(0, document.documentElement.scrollHeight);\n    }, 50);\n  }, [infoData]);\n\n  // 更改面试前预约的时间\n  const changeRecruitTime = useThrottle((value: { time: string }) => {\n    editPreRecruitTime(Number(value.time)).then((res) => {\n      res.code === 200\n        ? message.success(res.message)\n        : message.error(res.message);\n    });\n  }, 200);\n\n  // 获取面试数据\n  useEffect(() => {\n    getInterviewTimeDirec(Number(params.direction)).then((res) => {\n      console.log(res);\n\n      setInfoData(res.data);\n    });\n\n    getPreRecruitTime().then((res) => {\n      res.code === 200 && setPreTime(res.data);\n    });\n  }, [params]);\n\n  return (\n    <EditWrapper>\n      <div className=\"items-header\">\n        {preTime !== 0 && (\n          <Form\n            name=\"timeForm\"\n            onFinish={changeRecruitTime}\n            className=\"timeForm\"\n          >\n            <Form.Item\n              label=\"面试开始前多久能预约（单位：分钟）\"\n              name=\"time\"\n              initialValue={preTime}\n            >\n              <Input type=\"number\" />\n            </Form.Item>\n            <Form.Item>\n              <Button htmlType=\"submit\" type=\"primary\">\n                提交\n              </Button>\n            </Form.Item>\n          </Form>\n        )}\n      </div>\n      <div className=\"items-area\">\n        {infoData.length !== 0 ? (\n          infoData.map((item) => {\n            return <InterviewItem infoData={item} key={item.id} />;\n          })\n        ) : (\n          <div className=\"emptyArea\">\n            <Empty\n              imageStyle={{ height: 120 }}\n              description={\n                <span style={{ color: '#94979e' }}>什么都没有~</span>\n              }\n            >\n              <Button type=\"primary\" onClick={addTime}>\n                添加面试时间\n              </Button>\n            </Empty>\n          </div>\n        )}\n      </div>\n\n      <div className=\"items-tips\">\n        <FloatButton\n          type=\"primary\"\n          style={{ right: 24 }}\n          icon={<PlusOutlined />}\n          tooltip={<div>新增面试时间</div>}\n          onClick={addTime}\n        />\n      </div>\n    </EditWrapper>\n  );\n};\n\nexport default LayoutEdit;\n","import { useCallback, useEffect, useRef } from 'react';\r\n\r\ntype fnType = (...args: any) => any;\r\n\r\nexport function useThrottle(fn: fnType, delay: number, dep: any[] = []) {\r\n  const { current } = useRef<{ fn: fnType; timer?: NodeJS.Timeout | null }>({\r\n    fn,\r\n    timer: null\r\n  });\r\n  useEffect(\r\n    function () {\r\n      current.fn = fn;\r\n    },\r\n    [fn]\r\n  );\r\n\r\n  return useCallback(function f(this: any, ...args: any) {\r\n    if (!current.timer) {\r\n      current.timer = setTimeout(() => {\r\n        delete current.timer;\r\n      }, delay);\r\n      current.fn.call(this, ...args);\r\n    }\r\n  }, dep);\r\n}\r\n","export const BASE_URL = 'https://www.yidongmall.cn';\r\n\r\nexport const TIME_OUT = 10000;\r\n","import axios, { AxiosResponse, InternalAxiosRequestConfig } from 'axios';\nimport type { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport type { eAxiosResponse } from './type';\nimport { refleshToken } from '../api';\nimport { TokenFunc } from '@/type';\n\n// 是否正在刷新的标记\nlet isRefreshing = false;\n// 重试队列，每一项将是一个待执行的函数形式\nlet requests: TokenFunc[] = [];\n\nclass Request {\n  // axios 实例\n  instance: AxiosInstance;\n\n  constructor(config: AxiosRequestConfig) {\n    this.instance = axios.create(config);\n    this.instance.interceptors.request.use(\n      (config: InternalAxiosRequestConfig) => {\n        if (localStorage.getItem('token') !== null) {\n          const token = localStorage.getItem('token') as string;\n          config.headers['token'] = `${token}`;\n        } else {\n          console.log('删除 token 了');\n          delete config.headers['Authorization'];\n        }\n        return config;\n      },\n      (err: AxiosResponse) => {\n        return err;\n      }\n    );\n\n    this.instance.interceptors.response.use(\n      (response) => {\n        // 获取code值\n        const { code, message } = response.data;\n        // 执行无痛刷新token\n        if (code === 500 && message === 'token无效!请重新登录!') {\n          const config = response.config;\n          if (!isRefreshing) {\n            isRefreshing = true;\n            return refleshToken()\n              .then((res) => {\n                const { data: token } = res;\n                // 设置token\n                localStorage.setItem('token', token);\n                console.log('token设置完毕');\n                config.headers['token'] = token;\n\n                // 已经刷新了token,将队列里的请求进行重试\n                requests.forEach((item) => item(token));\n                // 将重试队列置空\n                requests = [];\n                return this.instance.request(config);\n              })\n              .catch((res) => {\n                // 如果刷新token无效则直接回到登录页面\n                console.log('reflashtoken error = >', res);\n                window.location.href = '/Login';\n              })\n              .finally(() => {\n                isRefreshing = false;\n              });\n          } else {\n            // 此时代表正在刷新token,返回一个未执行resolve的promise\n            return new Promise((resolve) => {\n              requests.push((token) => {\n                config.headers['token'] = token;\n                // 发送请求\n                resolve(this.instance.request(config));\n              });\n            });\n          }\n        }\n        return response.data;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n  }\n\n  request<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.instance.request<any, T>(config);\n  }\n  get<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'GET' });\n  }\n  post<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'POST' });\n  }\n  delete<T = eAxiosResponse>(config: AxiosRequestConfig) {\n    return this.request<T>({ ...config, method: 'DELETE' });\n  }\n}\n\nexport default Request;\n","import { BASE_URL, TIME_OUT } from './config/config';\r\nimport Request from './request/request';\r\n\r\nconst request = new Request({\r\n  baseURL: BASE_URL,\r\n  timeout: TIME_OUT\r\n});\r\n\r\nexport default request;\r\n","import { interviewTime, LoginProps, searchUserType } from '@/type';\r\nimport request from '.';\r\n\r\nexport function login(props: LoginProps) {\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: props\r\n  });\r\n}\r\n\r\n// 获取报名情况\r\nexport function getEnrollData(direction: string) {\r\n  return request.get({\r\n    url: `/api/admin/orderBy/${direction}`\r\n  });\r\n}\r\n\r\nexport function getSearchData(params: searchUserType) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoByName?username=${params.username}`\r\n  });\r\n}\r\n\r\n// 获取面试时间\r\nexport function getInterviewTime() {\r\n  return request.get({\r\n    url: '/api/admin/getAllTime'\r\n  });\r\n}\r\n// 根据方向获取面试时间\r\nexport function getInterviewTimeDirec(direction: number) {\r\n  return request.get({\r\n    url: `/api/admin/getAllTimeByDir/${direction}`\r\n  });\r\n}\r\n\r\nexport async function refreshToken() {\r\n  const username = window.localStorage.getItem('username') as string;\r\n  const password = window.localStorage.getItem('password') as string;\r\n\r\n  return login({ username, password }).then((res) => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\n// 更改面试基本信息\r\nexport function updateInterviewInfo(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/updateTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 新增面试时间\r\nexport function addNewInterview(props: interviewTime) {\r\n  return request.post({\r\n    url: '/api/admin/addTime',\r\n    data: props\r\n  });\r\n}\r\n\r\n// 删除面试时间\r\nexport function deleteInterviewTime(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/deleteTime/${id}`\r\n  });\r\n}\r\n\r\n// 获取某个用户的基本信息\r\nexport function getUserInfoById(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/getUserInfoById`,\r\n    params: { id }\r\n  });\r\n}\r\n\r\nexport function refleshToken() {\r\n  const username = localStorage.getItem('username');\r\n  const password = localStorage.getItem('password');\r\n\r\n  return request.post({\r\n    url: '/api/admin/login/pw',\r\n    params: {\r\n      username,\r\n      password\r\n    }\r\n  });\r\n}\r\n\r\n// 查询当前面试时间是否有被预约`\r\nexport function getAppointSec(id: number) {\r\n  return request.get({\r\n    url: `/api/admin/ifSec/${id}`\r\n  });\r\n}\r\n\r\n// 查询多少分钟之前能预约\r\nexport function getPreRecruitTime() {\r\n  return request.get({\r\n    url: `/api/admin/getPreRecruitTime`\r\n  });\r\n}\r\n\r\n// 更改多少分钟之前能预约\r\nexport function editPreRecruitTime(time: number) {\r\n  return request.get({\r\n    url: `/api/admin/changeRecruitTime/${time}`\r\n  });\r\n}\r\n"],"names":["EditWrapper","styled","_templateObject","_taggedTemplateLiteral","ItemWrapper","InterviewItem","_ref","_infoData$isdefalut","infoData","_useState","useState","_useState2","_slicedToArray","isDelete","setIsDelete","_useState3","_useState4","isAppoint","setIsAppoint","_useState5","isdefalut","_useState6","isDefault","setIsDefault","params","useParams","deleteItem","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","deleteInterviewTime","id","sent","code","message","console","log","abrupt","stop","apply","arguments","useEffect","getAppointSec","then","data","_jsx","children","_jsxs","className","Form","name","onFinish","value","submitValue","location","direction","Number","quota","startTime","format","endTime","addNewInterview","updateInterviewInfo","rules","required","label","initialValue","dayjs","DatePicker","TimePicker","disabled","Input","type","Radio","Button","htmlType","Popconfirm","title","description","okText","cancelText","onConfirm","DeleteOutlined","style","fontSize","color","memo","setInfoData","preTime","setPreTime","addTime","useCallback","date","Date","concat","_toConsumableArray","getTime","toLocaleString","spareQuota","setTimeout","window","scrollTo","document","documentElement","scrollHeight","changeRecruitTime","useThrottle","editPreRecruitTime","time","getInterviewTimeDirec","getPreRecruitTime","length","map","item","Empty","imageStyle","height","onClick","FloatButton","right","icon","PlusOutlined","tooltip","fn","delay","dep","undefined","current","useRef","timer","_current$fn","_len","args","Array","_key","call","this","isRefreshing","requests","Request","config","_this","_classCallCheck","instance","axios","interceptors","request","use","localStorage","getItem","token","headers","err","response","_response$data","Promise","resolve","push","refleshToken","setItem","forEach","catch","href","finally","reject","_createClass","key","_objectSpread","method","baseURL","timeout","login","props","url","getEnrollData","getSearchData","username","getInterviewTime","getUserInfoById","password"],"sourceRoot":""}